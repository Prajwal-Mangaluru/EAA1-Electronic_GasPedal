ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"swc_engine.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ENGINE_setEngine_run,"ax",%progbits
  20              		.align	2
  21              		.global	ENGINE_setEngine_run
  22              		.thumb
  23              		.thumb_func
  24              		.type	ENGINE_setEngine_run, %function
  25              	ENGINE_setEngine_run:
  26              	.LFB155:
  27              		.file 1 "source\\asw\\swc_engine.c"
   1:source\asw/swc_engine.c **** /*
   2:source\asw/swc_engine.c ****  * Filename: swc_engine.c
   3:source\asw/swc_engine.c ****  *
   4:source\asw/swc_engine.c ****  * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
   5:source\asw/swc_engine.c ****  *
   6:source\asw/swc_engine.c ****  * description: Software component that contains the engine runnable
   7:source\asw/swc_engine.c ****  * name: swc_engine
   8:source\asw/swc_engine.c ****  * shortname: engine
   9:source\asw/swc_engine.c ****  *
  10:source\asw/swc_engine.c ****  */
  11:source\asw/swc_engine.c **** 
  12:source\asw/swc_engine.c **** #include "project.h"
  13:source\asw/swc_engine.c **** #include "global.h"
  14:source\asw/swc_engine.c **** #include "rte.h"
  15:source\asw/swc_engine.c **** #include "rte_types.h"
  16:source\asw/swc_engine.c **** #include "swc_engine.h"
  17:source\asw/swc_engine.c **** #include "watchdog_timer.h"
  18:source\asw/swc_engine.c **** 
  19:source\asw/swc_engine.c **** #include "stdio.h"
  20:source\asw/swc_engine.c **** /* USER CODE START SWC_ENGINE_INCLUDE */
  21:source\asw/swc_engine.c **** #define SPEED_SIGNAL_MAX_AGE_MS 10  // Define what "too old" means
  22:source\asw/swc_engine.c **** /* USER CODE END SWC_ENGINE_INCLUDE */
  23:source\asw/swc_engine.c **** 
  24:source\asw/swc_engine.c **** 
  25:source\asw/swc_engine.c **** #include "sp_common.h"
  26:source\asw/swc_engine.c **** 
  27:source\asw/swc_engine.c **** /* USER CODE START SWC_ENGINE_USERDEFINITIONS */
  28:source\asw/swc_engine.c **** 
  29:source\asw/swc_engine.c **** /* USER CODE END SWC_ENGINE_USERDEFINITIONS */
  30:source\asw/swc_engine.c **** 
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 2


  31:source\asw/swc_engine.c **** 
  32:source\asw/swc_engine.c **** 
  33:source\asw/swc_engine.c **** /*
  34:source\asw/swc_engine.c ****  * component: swc_engine
  35:source\asw/swc_engine.c ****  * cycletime: 100
  36:source\asw/swc_engine.c ****  * description: Runnable that copies the speed signal value to the engine signal value and call the
  37:source\asw/swc_engine.c ****  * events: 
  38:source\asw/swc_engine.c ****  * name: ENGINE_setEngine_run
  39:source\asw/swc_engine.c ****  * shortname: setEngine
  40:source\asw/swc_engine.c ****  * signalIN: so_speed
  41:source\asw/swc_engine.c ****  * signalOUT: so_engine
  42:source\asw/swc_engine.c ****  * task: tsk_io
  43:source\asw/swc_engine.c ****  */
  44:source\asw/swc_engine.c **** void ENGINE_setEngine_run(RTE_event ev){
  28              		.loc 1 44 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LVL1:
  40              	.LBB11:
  41              	.LBB12:
  42              		.file 2 ".\\source\\rte/sc_speed.h"
   1:.\source\rte/sc_speed.h **** 
   2:.\source\rte/sc_speed.h **** 
   3:.\source\rte/sc_speed.h **** /**
   4:.\source\rte/sc_speed.h ****  *  file    SC_SPEED_signal.h
   5:.\source\rte/sc_speed.h ****  *
   6:.\source\rte/sc_speed.h ****  *  brief   signal base class for signal sc_speed
   7:.\source\rte/sc_speed.h ****  *
   8:.\source\rte/sc_speed.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\source\rte/sc_speed.h ****  *
  10:.\source\rte/sc_speed.h ****  * description: Signal class containing the speed data
  11:.\source\rte/sc_speed.h ****  * name: sc_speed
  12:.\source\rte/sc_speed.h ****  * shortname: speed
  13:.\source\rte/sc_speed.h ****  *
  14:.\source\rte/sc_speed.h ****  */
  15:.\source\rte/sc_speed.h **** 
  16:.\source\rte/sc_speed.h **** 
  17:.\source\rte/sc_speed.h **** 
  18:.\source\rte/sc_speed.h **** #ifndef SC_SPEED_SIGNAL_H_INCLUDED
  19:.\source\rte/sc_speed.h **** #define SC_SPEED_SIGNAL_H_INCLUDED
  20:.\source\rte/sc_speed.h **** 
  21:.\source\rte/sc_speed.h **** /*================================================[ public includes  ]=============================
  22:.\source\rte/sc_speed.h **** #include "global.h"
  23:.\source\rte/sc_speed.h **** #include "project.h"
  24:.\source\rte/sc_speed.h **** #include "rte.h"
  25:.\source\rte/sc_speed.h **** #include "rte_types.h"
  26:.\source\rte/sc_speed.h **** 
  27:.\source\rte/sc_speed.h **** #include "sc_speed_type.h"
  28:.\source\rte/sc_speed.h **** 
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 3


  29:.\source\rte/sc_speed.h **** 
  30:.\source\rte/sc_speed.h **** /**************************************************************************************************
  31:.\source\rte/sc_speed.h **** /* The driver API block																						*/
  32:.\source\rte/sc_speed.h **** /**************************************************************************************************
  33:.\source\rte/sc_speed.h ****                                                                                                    
  34:.\source\rte/sc_speed.h **** /**
  35:.\source\rte/sc_speed.h ****  *  Definition of function types for driver interfaces.
  36:.\source\rte/sc_speed.h ****  *  I-Port
  37:.\source\rte/sc_speed.h ****  */
  38:.\source\rte/sc_speed.h **** typedef RC_t (*SC_SPEED_driverIn_t)(SC_SPEED_data_t * const);
  39:.\source\rte/sc_speed.h **** 
  40:.\source\rte/sc_speed.h **** /**
  41:.\source\rte/sc_speed.h ****  *  Definition of function types for driver interfaces.
  42:.\source\rte/sc_speed.h ****  *  O-Port
  43:.\source\rte/sc_speed.h ****  */
  44:.\source\rte/sc_speed.h **** typedef RC_t (*SC_SPEED_driverOut_t)( const SC_SPEED_data_t * const);
  45:.\source\rte/sc_speed.h **** 
  46:.\source\rte/sc_speed.h **** 
  47:.\source\rte/sc_speed.h **** /**************************************************************************************************
  48:.\source\rte/sc_speed.h **** /* The signal configuration API block																				*/
  49:.\source\rte/sc_speed.h **** /**************************************************************************************************
  50:.\source\rte/sc_speed.h **** 
  51:.\source\rte/sc_speed.h **** /**
  52:.\source\rte/sc_speed.h ****  * Instances of the struct SC_SPEED_cfg_t represent the signal object configuration.
  53:.\source\rte/sc_speed.h ****  */
  54:.\source\rte/sc_speed.h **** struct SC_SPEED_cfg_s
  55:.\source\rte/sc_speed.h **** {
  56:.\source\rte/sc_speed.h ****     /**
  57:.\source\rte/sc_speed.h ****      * Function pointer to the input driver
  58:.\source\rte/sc_speed.h ****      */
  59:.\source\rte/sc_speed.h ****     SC_SPEED_driverIn_t const inDriver;
  60:.\source\rte/sc_speed.h **** 
  61:.\source\rte/sc_speed.h ****     /**
  62:.\source\rte/sc_speed.h ****      * Function pointer to the output driver table
  63:.\source\rte/sc_speed.h ****      */
  64:.\source\rte/sc_speed.h ****    SC_SPEED_driverOut_t const outDriver;
  65:.\source\rte/sc_speed.h ****    
  66:.\source\rte/sc_speed.h ****     /**
  67:.\source\rte/sc_speed.h ****      * Event onUpdate
  68:.\source\rte/sc_speed.h ****      */
  69:.\source\rte/sc_speed.h ****     EventMaskType const evOnUpdate;
  70:.\source\rte/sc_speed.h ****     
  71:.\source\rte/sc_speed.h ****     
  72:.\source\rte/sc_speed.h ****     /**
  73:.\source\rte/sc_speed.h ****      * Event onError
  74:.\source\rte/sc_speed.h ****      */
  75:.\source\rte/sc_speed.h ****     EventMaskType const evOnError;
  76:.\source\rte/sc_speed.h ****     
  77:.\source\rte/sc_speed.h ****     /**
  78:.\source\rte/sc_speed.h ****      * Task Count onUpdate
  79:.\source\rte/sc_speed.h ****      */
  80:.\source\rte/sc_speed.h ****     size_t const onUpdateTaskCount;
  81:.\source\rte/sc_speed.h **** 
  82:.\source\rte/sc_speed.h ****     /**
  83:.\source\rte/sc_speed.h ****      * Task List onUpdate
  84:.\source\rte/sc_speed.h ****      */
  85:.\source\rte/sc_speed.h ****     TaskTypeArray* const onUpdateTasks;
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 4


  86:.\source\rte/sc_speed.h ****     
  87:.\source\rte/sc_speed.h ****     /**
  88:.\source\rte/sc_speed.h ****      * Task Count onError
  89:.\source\rte/sc_speed.h ****      */
  90:.\source\rte/sc_speed.h ****     size_t const onErrorTaskCount;
  91:.\source\rte/sc_speed.h **** 
  92:.\source\rte/sc_speed.h ****     /**
  93:.\source\rte/sc_speed.h ****      * Task List onError
  94:.\source\rte/sc_speed.h ****      */
  95:.\source\rte/sc_speed.h ****     TaskTypeArray* const onErrorTasks;
  96:.\source\rte/sc_speed.h **** 	
  97:.\source\rte/sc_speed.h **** 	
  98:.\source\rte/sc_speed.h **** 	/**
  99:.\source\rte/sc_speed.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 100:.\source\rte/sc_speed.h **** 	 */
 101:.\source\rte/sc_speed.h **** 	 boolean_t const resourceActive;
 102:.\source\rte/sc_speed.h **** 	 
 103:.\source\rte/sc_speed.h **** 	/**
 104:.\source\rte/sc_speed.h **** 	 * Ressourse 
 105:.\source\rte/sc_speed.h **** 	 */
 106:.\source\rte/sc_speed.h **** 	 ResourceType const resource;
 107:.\source\rte/sc_speed.h **** 
 108:.\source\rte/sc_speed.h **** };                                                                                                 
 109:.\source\rte/sc_speed.h **** typedef const struct SC_SPEED_cfg_s SC_SPEED_cfg_t;
 110:.\source\rte/sc_speed.h ****                               
 111:.\source\rte/sc_speed.h **** /**************************************************************************************************
 112:.\source\rte/sc_speed.h **** /* The data interface block																							*/
 113:.\source\rte/sc_speed.h **** /**************************************************************************************************
 114:.\source\rte/sc_speed.h **** 
 115:.\source\rte/sc_speed.h ****                                                                                                    
 116:.\source\rte/sc_speed.h **** 							  
 117:.\source\rte/sc_speed.h **** /**
 118:.\source\rte/sc_speed.h ****  * Instances of the struct SC_SPEED_t represent the signal objects.
 119:.\source\rte/sc_speed.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\source\rte/sc_speed.h ****  */
 121:.\source\rte/sc_speed.h **** struct SC_SPEED_s
 122:.\source\rte/sc_speed.h **** {                                                                                                  
 123:.\source\rte/sc_speed.h **** 
 124:.\source\rte/sc_speed.h **** 	/**
 125:.\source\rte/sc_speed.h **** 	 * Data buffer for the application value
 126:.\source\rte/sc_speed.h **** 	 */
 127:.\source\rte/sc_speed.h ****     SC_SPEED_data_t value;
 128:.\source\rte/sc_speed.h **** 
 129:.\source\rte/sc_speed.h ****     /**
 130:.\source\rte/sc_speed.h ****      * Current signal status
 131:.\source\rte/sc_speed.h ****      */
 132:.\source\rte/sc_speed.h ****     RTE_signalStatus_t status;
 133:.\source\rte/sc_speed.h **** 
 134:.\source\rte/sc_speed.h ****     /**
 135:.\source\rte/sc_speed.h ****      * Current age of the signal (in calling cycles)
 136:.\source\rte/sc_speed.h ****      */
 137:.\source\rte/sc_speed.h ****     uint32_t age;
 138:.\source\rte/sc_speed.h **** 
 139:.\source\rte/sc_speed.h ****     /**
 140:.\source\rte/sc_speed.h ****      * Pointer to the signal configuration
 141:.\source\rte/sc_speed.h ****      */
 142:.\source\rte/sc_speed.h **** 	const SC_SPEED_cfg_t * const    pSigCfg;
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 5


 143:.\source\rte/sc_speed.h **** 
 144:.\source\rte/sc_speed.h **** };                                                                                                 
 145:.\source\rte/sc_speed.h **** typedef struct SC_SPEED_s SC_SPEED_t;
 146:.\source\rte/sc_speed.h **** 
 147:.\source\rte/sc_speed.h **** /**************************************************************************************************
 148:.\source\rte/sc_speed.h **** /* Signal initialisation   																							*/
 149:.\source\rte/sc_speed.h **** /**************************************************************************************************
 150:.\source\rte/sc_speed.h **** 
 151:.\source\rte/sc_speed.h **** /**
 152:.\source\rte/sc_speed.h ****  * Initializes a signal instance with a passed init value.
 153:.\source\rte/sc_speed.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\source\rte/sc_speed.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 155:.\source\rte/sc_speed.h ****  *
 156:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object which will be initialised
 157:.\source\rte/sc_speed.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\source\rte/sc_speed.h ****  *
 159:.\source\rte/sc_speed.h ****  **/
 160:.\source\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_init( SC_SPEED_t * const signal )
 161:.\source\rte/sc_speed.h **** {                                                                                                  
 162:.\source\rte/sc_speed.h **** 
 163:.\source\rte/sc_speed.h ****    RC_t ret = RC_SUCCESS;
 164:.\source\rte/sc_speed.h **** 
 165:.\source\rte/sc_speed.h ****    //Set value and raw value
 166:.\source\rte/sc_speed.h ****    signal->value  = SC_SPEED_INIT_DATA;
 167:.\source\rte/sc_speed.h ****    signal->age    = 0;
 168:.\source\rte/sc_speed.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\source\rte/sc_speed.h **** 
 170:.\source\rte/sc_speed.h ****    return ret;
 171:.\source\rte/sc_speed.h **** }
 172:.\source\rte/sc_speed.h **** 
 173:.\source\rte/sc_speed.h **** /**************************************************************************************************
 174:.\source\rte/sc_speed.h **** /* Status and timeout control																						*/
 175:.\source\rte/sc_speed.h **** /**************************************************************************************************
 176:.\source\rte/sc_speed.h **** 
 177:.\source\rte/sc_speed.h **** /**
 178:.\source\rte/sc_speed.h ****  *  Returns the current signal status of the passed signal instance.
 179:.\source\rte/sc_speed.h ****  *
 180:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 181:.\source\rte/sc_speed.h ****  * @return  sig_status_t: The current signal status
 182:.\source\rte/sc_speed.h ****  *
 183:.\source\rte/sc_speed.h ****  **/
 184:.\source\rte/sc_speed.h **** inline RTE_signalStatus_t RTE_SC_SPEED_getStatus( const SC_SPEED_t * const signal )
 185:.\source\rte/sc_speed.h **** {
 186:.\source\rte/sc_speed.h ****    return signal->status;
 187:.\source\rte/sc_speed.h **** }
 188:.\source\rte/sc_speed.h **** 
 189:.\source\rte/sc_speed.h **** 
 190:.\source\rte/sc_speed.h **** /**
 191:.\source\rte/sc_speed.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\source\rte/sc_speed.h ****  *
 193:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 194:.\source\rte/sc_speed.h ****  * @param  const sig_status_t status: New signal status
 195:.\source\rte/sc_speed.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\source\rte/sc_speed.h ****  *
 197:.\source\rte/sc_speed.h ****  */
 198:.\source\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_setStatus( SC_SPEED_t * const signal, const RTE_signalStatus_t status )
 199:.\source\rte/sc_speed.h **** {
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 6


 200:.\source\rte/sc_speed.h ****    signal->status = status;
 201:.\source\rte/sc_speed.h ****    size_t taskNum=0;
 202:.\source\rte/sc_speed.h ****    
 203:.\source\rte/sc_speed.h ****    //Fire error events in case of invalid state
 204:.\source\rte/sc_speed.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 205:.\source\rte/sc_speed.h ****    {
 206:.\source\rte/sc_speed.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\source\rte/sc_speed.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\source\rte/sc_speed.h **** 
 209:.\source\rte/sc_speed.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\source\rte/sc_speed.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\source\rte/sc_speed.h **** 				TaskType task = (*pTaskArray)[taskNum];
 212:.\source\rte/sc_speed.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\source\rte/sc_speed.h **** 			}
 214:.\source\rte/sc_speed.h **** 		}
 215:.\source\rte/sc_speed.h ****    }
 216:.\source\rte/sc_speed.h ****    
 217:.\source\rte/sc_speed.h ****    return RC_SUCCESS;
 218:.\source\rte/sc_speed.h **** }
 219:.\source\rte/sc_speed.h **** 
 220:.\source\rte/sc_speed.h **** 
 221:.\source\rte/sc_speed.h **** /**
 222:.\source\rte/sc_speed.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 223:.\source\rte/sc_speed.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\source\rte/sc_speed.h ****  *
 225:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 226:.\source\rte/sc_speed.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 227:.\source\rte/sc_speed.h ****  */
 228:.\source\rte/sc_speed.h **** inline uint32_t RTE_SC_SPEED_getAge( const SC_SPEED_t * const signal )
 229:.\source\rte/sc_speed.h **** {
 230:.\source\rte/sc_speed.h ****     return signal->age;
 231:.\source\rte/sc_speed.h **** }
 232:.\source\rte/sc_speed.h **** 
 233:.\source\rte/sc_speed.h **** /**
 234:.\source\rte/sc_speed.h ****  * Should be called by application or driver if no new value can be provided.
 235:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 236:.\source\rte/sc_speed.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 237:.\source\rte/sc_speed.h ****  * @return void
 238:.\source\rte/sc_speed.h ****  */
 239:.\source\rte/sc_speed.h **** inline void RTE_SC_SPEED_incAge(  SC_SPEED_t * const signal , uint32_t increment)
 240:.\source\rte/sc_speed.h **** {
 241:.\source\rte/sc_speed.h **** 	   //Hack....
 242:.\source\rte/sc_speed.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 243:.\source\rte/sc_speed.h **** 	   {
 244:.\source\rte/sc_speed.h **** 	      signal->age += increment;
 245:.\source\rte/sc_speed.h **** 	   }
 246:.\source\rte/sc_speed.h **** }
 247:.\source\rte/sc_speed.h **** 
 248:.\source\rte/sc_speed.h **** 
 249:.\source\rte/sc_speed.h **** /**************************************************************************************************
 250:.\source\rte/sc_speed.h **** /* Application Data read/write Interface																			*/
 251:.\source\rte/sc_speed.h **** /**************************************************************************************************
 252:.\source\rte/sc_speed.h **** 
 253:.\source\rte/sc_speed.h **** /**
 254:.\source\rte/sc_speed.h ****  * Returns the current application value as pointer to the signal payload.
 255:.\source\rte/sc_speed.h ****  * Careful: This is not threadsafe!!!
 256:.\source\rte/sc_speed.h ****  *
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 7


 257:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 258:.\source\rte/sc_speed.h ****  * @return sc_speed_data_t*: pointer to the current value of the application data buffer
 259:.\source\rte/sc_speed.h ****  *
 260:.\source\rte/sc_speed.h ****  **/
 261:.\source\rte/sc_speed.h **** inline SC_SPEED_data_t* RTE_SC_SPEED_getPtr( SC_SPEED_t * const signal )
 262:.\source\rte/sc_speed.h **** {               
 263:.\source\rte/sc_speed.h ****    //Todo: Critical region cannot be protected using return values																						
 264:.\source\rte/sc_speed.h ****    return &(signal->value);                                                                        
 265:.\source\rte/sc_speed.h **** }
 266:.\source\rte/sc_speed.h **** 
 267:.\source\rte/sc_speed.h **** /**
 268:.\source\rte/sc_speed.h ****  * Returns the current application value of the passed signal instance.
 269:.\source\rte/sc_speed.h ****  *
 270:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 271:.\source\rte/sc_speed.h ****  * @return sc_speed_data_t: current value of the application data buffer
 272:.\source\rte/sc_speed.h ****  *
 273:.\source\rte/sc_speed.h ****  **/
 274:.\source\rte/sc_speed.h **** inline SC_SPEED_data_t RTE_SC_SPEED_get( const SC_SPEED_t * const signal )
 275:.\source\rte/sc_speed.h **** {               
 276:.\source\rte/sc_speed.h ****    //Todo: Critical region cannot be protected using return values																						
 277:.\source\rte/sc_speed.h ****    return signal->value;                                                                           
  43              		.loc 2 277 0
  44 0002 194B     		ldr	r3, .L12
  45 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  46              	.LVL2:
  47              	.LBE12:
  48              	.LBE11:
  49              	.LBB13:
  50              	.LBB14:
 230:.\source\rte/sc_speed.h **** }
  51              		.loc 2 230 0
  52 0006 5B68     		ldr	r3, [r3, #4]
  53              	.LVL3:
  54              	.LBE14:
  55              	.LBE13:
  45:source\asw/swc_engine.c **** 	
  46:source\asw/swc_engine.c **** 	/* USER CODE START ENGINE_setEngine_run */
  47:source\asw/swc_engine.c ****     SC_SPEED_data_t speed = RTE_SC_SPEED_get(&SO_SPEED_signal);
  48:source\asw/swc_engine.c ****     SC_ENGINE_data_t myEngine;
  49:source\asw/swc_engine.c ****     if(RTE_SC_SPEED_getAge(&SO_SPEED_signal) < SPEED_SIGNAL_MAX_AGE_MS )
  56              		.loc 1 49 0
  57 0008 092B     		cmp	r3, #9
  58 000a 01D9     		bls	.L3
  50:source\asw/swc_engine.c ****     {
  51:source\asw/swc_engine.c ****         //char buffer[100];
  52:source\asw/swc_engine.c ****         //snprintf(buffer, sizeof(buffer), "Age:%u\r\n", SO_SPEED_signal.age);
  53:source\asw/swc_engine.c ****         //UART_LOG_PutString(buffer);
  54:source\asw/swc_engine.c ****         //UART_LOG_PutString("New Signal\r\n");
  55:source\asw/swc_engine.c ****         myEngine.engineLightValue=speed.speedValue;
  56:source\asw/swc_engine.c ****     }
  57:source\asw/swc_engine.c ****     else
  58:source\asw/swc_engine.c ****     {
  59:source\asw/swc_engine.c ****         //char buffer[100];
  60:source\asw/swc_engine.c ****         //snprintf(buffer, sizeof(buffer), "Age:%u\r\n", SO_SPEED_signal.age);
  61:source\asw/swc_engine.c ****         //UART_LOG_PutString(buffer);
  62:source\asw/swc_engine.c ****         //UART_LOG_PutString("Old signal\r\n");
  63:source\asw/swc_engine.c ****         myEngine.engineLightValue=0;
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 8


  59              		.loc 1 63 0
  60 000c 4FF00002 		mov	r2, #0
  61              	.LVL4:
  62              	.L3:
  63              	.LBB15:
  64              	.LBB16:
  65              		.file 3 ".\\source\\rte/sc_engine.h"
   1:.\source\rte/sc_engine.h **** 
   2:.\source\rte/sc_engine.h **** 
   3:.\source\rte/sc_engine.h **** /**
   4:.\source\rte/sc_engine.h ****  *  file    SC_ENGINE_signal.h
   5:.\source\rte/sc_engine.h ****  *
   6:.\source\rte/sc_engine.h ****  *  brief   signal base class for signal sc_engine
   7:.\source\rte/sc_engine.h ****  *
   8:.\source\rte/sc_engine.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\source\rte/sc_engine.h ****  *
  10:.\source\rte/sc_engine.h ****  * description: Signal class containing the engine data
  11:.\source\rte/sc_engine.h ****  * name: sc_engine
  12:.\source\rte/sc_engine.h ****  * shortname: engine
  13:.\source\rte/sc_engine.h ****  *
  14:.\source\rte/sc_engine.h ****  */
  15:.\source\rte/sc_engine.h **** 
  16:.\source\rte/sc_engine.h **** 
  17:.\source\rte/sc_engine.h **** 
  18:.\source\rte/sc_engine.h **** #ifndef SC_ENGINE_SIGNAL_H_INCLUDED
  19:.\source\rte/sc_engine.h **** #define SC_ENGINE_SIGNAL_H_INCLUDED
  20:.\source\rte/sc_engine.h **** 
  21:.\source\rte/sc_engine.h **** /*================================================[ public includes  ]=============================
  22:.\source\rte/sc_engine.h **** #include "global.h"
  23:.\source\rte/sc_engine.h **** #include "project.h"
  24:.\source\rte/sc_engine.h **** #include "rte.h"
  25:.\source\rte/sc_engine.h **** #include "rte_types.h"
  26:.\source\rte/sc_engine.h **** 
  27:.\source\rte/sc_engine.h **** #include "sc_engine_type.h"
  28:.\source\rte/sc_engine.h **** 
  29:.\source\rte/sc_engine.h **** 
  30:.\source\rte/sc_engine.h **** /**************************************************************************************************
  31:.\source\rte/sc_engine.h **** /* The driver API block																						*/
  32:.\source\rte/sc_engine.h **** /**************************************************************************************************
  33:.\source\rte/sc_engine.h ****                                                                                                    
  34:.\source\rte/sc_engine.h **** /**
  35:.\source\rte/sc_engine.h ****  *  Definition of function types for driver interfaces.
  36:.\source\rte/sc_engine.h ****  *  I-Port
  37:.\source\rte/sc_engine.h ****  */
  38:.\source\rte/sc_engine.h **** typedef RC_t (*SC_ENGINE_driverIn_t)(SC_ENGINE_data_t * const);
  39:.\source\rte/sc_engine.h **** 
  40:.\source\rte/sc_engine.h **** /**
  41:.\source\rte/sc_engine.h ****  *  Definition of function types for driver interfaces.
  42:.\source\rte/sc_engine.h ****  *  O-Port
  43:.\source\rte/sc_engine.h ****  */
  44:.\source\rte/sc_engine.h **** typedef RC_t (*SC_ENGINE_driverOut_t)( const SC_ENGINE_data_t * const);
  45:.\source\rte/sc_engine.h **** 
  46:.\source\rte/sc_engine.h **** 
  47:.\source\rte/sc_engine.h **** /**************************************************************************************************
  48:.\source\rte/sc_engine.h **** /* The signal configuration API block																				*/
  49:.\source\rte/sc_engine.h **** /**************************************************************************************************
  50:.\source\rte/sc_engine.h **** 
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 9


  51:.\source\rte/sc_engine.h **** /**
  52:.\source\rte/sc_engine.h ****  * Instances of the struct SC_ENGINE_cfg_t represent the signal object configuration.
  53:.\source\rte/sc_engine.h ****  */
  54:.\source\rte/sc_engine.h **** struct SC_ENGINE_cfg_s
  55:.\source\rte/sc_engine.h **** {
  56:.\source\rte/sc_engine.h ****     /**
  57:.\source\rte/sc_engine.h ****      * Function pointer to the input driver
  58:.\source\rte/sc_engine.h ****      */
  59:.\source\rte/sc_engine.h ****     SC_ENGINE_driverIn_t const inDriver;
  60:.\source\rte/sc_engine.h **** 
  61:.\source\rte/sc_engine.h ****     /**
  62:.\source\rte/sc_engine.h ****      * Function pointer to the output driver table
  63:.\source\rte/sc_engine.h ****      */
  64:.\source\rte/sc_engine.h ****    SC_ENGINE_driverOut_t const outDriver;
  65:.\source\rte/sc_engine.h ****    
  66:.\source\rte/sc_engine.h ****     /**
  67:.\source\rte/sc_engine.h ****      * Event onUpdate
  68:.\source\rte/sc_engine.h ****      */
  69:.\source\rte/sc_engine.h ****     EventMaskType const evOnUpdate;
  70:.\source\rte/sc_engine.h ****     
  71:.\source\rte/sc_engine.h ****     
  72:.\source\rte/sc_engine.h ****     /**
  73:.\source\rte/sc_engine.h ****      * Event onError
  74:.\source\rte/sc_engine.h ****      */
  75:.\source\rte/sc_engine.h ****     EventMaskType const evOnError;
  76:.\source\rte/sc_engine.h ****     
  77:.\source\rte/sc_engine.h ****     /**
  78:.\source\rte/sc_engine.h ****      * Task Count onUpdate
  79:.\source\rte/sc_engine.h ****      */
  80:.\source\rte/sc_engine.h ****     size_t const onUpdateTaskCount;
  81:.\source\rte/sc_engine.h **** 
  82:.\source\rte/sc_engine.h ****     /**
  83:.\source\rte/sc_engine.h ****      * Task List onUpdate
  84:.\source\rte/sc_engine.h ****      */
  85:.\source\rte/sc_engine.h ****     TaskTypeArray* const onUpdateTasks;
  86:.\source\rte/sc_engine.h ****     
  87:.\source\rte/sc_engine.h ****     /**
  88:.\source\rte/sc_engine.h ****      * Task Count onError
  89:.\source\rte/sc_engine.h ****      */
  90:.\source\rte/sc_engine.h ****     size_t const onErrorTaskCount;
  91:.\source\rte/sc_engine.h **** 
  92:.\source\rte/sc_engine.h ****     /**
  93:.\source\rte/sc_engine.h ****      * Task List onError
  94:.\source\rte/sc_engine.h ****      */
  95:.\source\rte/sc_engine.h ****     TaskTypeArray* const onErrorTasks;
  96:.\source\rte/sc_engine.h **** 	
  97:.\source\rte/sc_engine.h **** 	
  98:.\source\rte/sc_engine.h **** 	/**
  99:.\source\rte/sc_engine.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 100:.\source\rte/sc_engine.h **** 	 */
 101:.\source\rte/sc_engine.h **** 	 boolean_t const resourceActive;
 102:.\source\rte/sc_engine.h **** 	 
 103:.\source\rte/sc_engine.h **** 	/**
 104:.\source\rte/sc_engine.h **** 	 * Ressourse 
 105:.\source\rte/sc_engine.h **** 	 */
 106:.\source\rte/sc_engine.h **** 	 ResourceType const resource;
 107:.\source\rte/sc_engine.h **** 
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 10


 108:.\source\rte/sc_engine.h **** };                                                                                                 
 109:.\source\rte/sc_engine.h **** typedef const struct SC_ENGINE_cfg_s SC_ENGINE_cfg_t;
 110:.\source\rte/sc_engine.h ****                               
 111:.\source\rte/sc_engine.h **** /**************************************************************************************************
 112:.\source\rte/sc_engine.h **** /* The data interface block																							*/
 113:.\source\rte/sc_engine.h **** /**************************************************************************************************
 114:.\source\rte/sc_engine.h **** 
 115:.\source\rte/sc_engine.h ****                                                                                                    
 116:.\source\rte/sc_engine.h **** 							  
 117:.\source\rte/sc_engine.h **** /**
 118:.\source\rte/sc_engine.h ****  * Instances of the struct SC_ENGINE_t represent the signal objects.
 119:.\source\rte/sc_engine.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\source\rte/sc_engine.h ****  */
 121:.\source\rte/sc_engine.h **** struct SC_ENGINE_s
 122:.\source\rte/sc_engine.h **** {                                                                                                  
 123:.\source\rte/sc_engine.h **** 
 124:.\source\rte/sc_engine.h **** 	/**
 125:.\source\rte/sc_engine.h **** 	 * Data buffer for the application value
 126:.\source\rte/sc_engine.h **** 	 */
 127:.\source\rte/sc_engine.h ****     SC_ENGINE_data_t value;
 128:.\source\rte/sc_engine.h **** 
 129:.\source\rte/sc_engine.h ****     /**
 130:.\source\rte/sc_engine.h ****      * Current signal status
 131:.\source\rte/sc_engine.h ****      */
 132:.\source\rte/sc_engine.h ****     RTE_signalStatus_t status;
 133:.\source\rte/sc_engine.h **** 
 134:.\source\rte/sc_engine.h ****     /**
 135:.\source\rte/sc_engine.h ****      * Current age of the signal (in calling cycles)
 136:.\source\rte/sc_engine.h ****      */
 137:.\source\rte/sc_engine.h ****     uint32_t age;
 138:.\source\rte/sc_engine.h **** 
 139:.\source\rte/sc_engine.h ****     /**
 140:.\source\rte/sc_engine.h ****      * Pointer to the signal configuration
 141:.\source\rte/sc_engine.h ****      */
 142:.\source\rte/sc_engine.h **** 	const SC_ENGINE_cfg_t * const    pSigCfg;
 143:.\source\rte/sc_engine.h **** 
 144:.\source\rte/sc_engine.h **** };                                                                                                 
 145:.\source\rte/sc_engine.h **** typedef struct SC_ENGINE_s SC_ENGINE_t;
 146:.\source\rte/sc_engine.h **** 
 147:.\source\rte/sc_engine.h **** /**************************************************************************************************
 148:.\source\rte/sc_engine.h **** /* Signal initialisation   																							*/
 149:.\source\rte/sc_engine.h **** /**************************************************************************************************
 150:.\source\rte/sc_engine.h **** 
 151:.\source\rte/sc_engine.h **** /**
 152:.\source\rte/sc_engine.h ****  * Initializes a signal instance with a passed init value.
 153:.\source\rte/sc_engine.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\source\rte/sc_engine.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 155:.\source\rte/sc_engine.h ****  *
 156:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object which will be initialised
 157:.\source\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\source\rte/sc_engine.h ****  *
 159:.\source\rte/sc_engine.h ****  **/
 160:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_init( SC_ENGINE_t * const signal )
 161:.\source\rte/sc_engine.h **** {                                                                                                  
 162:.\source\rte/sc_engine.h **** 
 163:.\source\rte/sc_engine.h ****    RC_t ret = RC_SUCCESS;
 164:.\source\rte/sc_engine.h **** 
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 11


 165:.\source\rte/sc_engine.h ****    //Set value and raw value
 166:.\source\rte/sc_engine.h ****    signal->value  = SC_ENGINE_INIT_DATA;
 167:.\source\rte/sc_engine.h ****    signal->age    = 0;
 168:.\source\rte/sc_engine.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\source\rte/sc_engine.h **** 
 170:.\source\rte/sc_engine.h ****    return ret;
 171:.\source\rte/sc_engine.h **** }
 172:.\source\rte/sc_engine.h **** 
 173:.\source\rte/sc_engine.h **** /**************************************************************************************************
 174:.\source\rte/sc_engine.h **** /* Status and timeout control																						*/
 175:.\source\rte/sc_engine.h **** /**************************************************************************************************
 176:.\source\rte/sc_engine.h **** 
 177:.\source\rte/sc_engine.h **** /**
 178:.\source\rte/sc_engine.h ****  *  Returns the current signal status of the passed signal instance.
 179:.\source\rte/sc_engine.h ****  *
 180:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 181:.\source\rte/sc_engine.h ****  * @return  sig_status_t: The current signal status
 182:.\source\rte/sc_engine.h ****  *
 183:.\source\rte/sc_engine.h ****  **/
 184:.\source\rte/sc_engine.h **** inline RTE_signalStatus_t RTE_SC_ENGINE_getStatus( const SC_ENGINE_t * const signal )
 185:.\source\rte/sc_engine.h **** {
 186:.\source\rte/sc_engine.h ****    return signal->status;
 187:.\source\rte/sc_engine.h **** }
 188:.\source\rte/sc_engine.h **** 
 189:.\source\rte/sc_engine.h **** 
 190:.\source\rte/sc_engine.h **** /**
 191:.\source\rte/sc_engine.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\source\rte/sc_engine.h ****  *
 193:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 194:.\source\rte/sc_engine.h ****  * @param  const sig_status_t status: New signal status
 195:.\source\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\source\rte/sc_engine.h ****  *
 197:.\source\rte/sc_engine.h ****  */
 198:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_setStatus( SC_ENGINE_t * const signal, const RTE_signalStatus_t status )
 199:.\source\rte/sc_engine.h **** {
 200:.\source\rte/sc_engine.h ****    signal->status = status;
 201:.\source\rte/sc_engine.h ****    size_t taskNum=0;
 202:.\source\rte/sc_engine.h ****    
 203:.\source\rte/sc_engine.h ****    //Fire error events in case of invalid state
 204:.\source\rte/sc_engine.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 205:.\source\rte/sc_engine.h ****    {
 206:.\source\rte/sc_engine.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\source\rte/sc_engine.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\source\rte/sc_engine.h **** 
 209:.\source\rte/sc_engine.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\source\rte/sc_engine.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\source\rte/sc_engine.h **** 				TaskType task = (*pTaskArray)[taskNum];
 212:.\source\rte/sc_engine.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\source\rte/sc_engine.h **** 			}
 214:.\source\rte/sc_engine.h **** 		}
 215:.\source\rte/sc_engine.h ****    }
 216:.\source\rte/sc_engine.h ****    
 217:.\source\rte/sc_engine.h ****    return RC_SUCCESS;
 218:.\source\rte/sc_engine.h **** }
 219:.\source\rte/sc_engine.h **** 
 220:.\source\rte/sc_engine.h **** 
 221:.\source\rte/sc_engine.h **** /**
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 12


 222:.\source\rte/sc_engine.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 223:.\source\rte/sc_engine.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\source\rte/sc_engine.h ****  *
 225:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 226:.\source\rte/sc_engine.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 227:.\source\rte/sc_engine.h ****  */
 228:.\source\rte/sc_engine.h **** inline uint32_t RTE_SC_ENGINE_getAge( const SC_ENGINE_t * const signal )
 229:.\source\rte/sc_engine.h **** {
 230:.\source\rte/sc_engine.h ****    return signal->age;
 231:.\source\rte/sc_engine.h **** }
 232:.\source\rte/sc_engine.h **** 
 233:.\source\rte/sc_engine.h **** /**
 234:.\source\rte/sc_engine.h ****  * Should be called by application or driver if no new value can be provided.
 235:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 236:.\source\rte/sc_engine.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 237:.\source\rte/sc_engine.h ****  * @return void
 238:.\source\rte/sc_engine.h ****  */
 239:.\source\rte/sc_engine.h **** inline void RTE_SC_ENGINE_incAge(  SC_ENGINE_t * const signal , uint32_t increment)
 240:.\source\rte/sc_engine.h **** {
 241:.\source\rte/sc_engine.h **** 	   //Hack....
 242:.\source\rte/sc_engine.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 243:.\source\rte/sc_engine.h **** 	   {
 244:.\source\rte/sc_engine.h **** 	      signal->age += increment;
 245:.\source\rte/sc_engine.h **** 	   }
 246:.\source\rte/sc_engine.h **** }
 247:.\source\rte/sc_engine.h **** 
 248:.\source\rte/sc_engine.h **** 
 249:.\source\rte/sc_engine.h **** /**************************************************************************************************
 250:.\source\rte/sc_engine.h **** /* Application Data read/write Interface																			*/
 251:.\source\rte/sc_engine.h **** /**************************************************************************************************
 252:.\source\rte/sc_engine.h **** 
 253:.\source\rte/sc_engine.h **** /**
 254:.\source\rte/sc_engine.h ****  * Returns the current application value as pointer to the signal payload.
 255:.\source\rte/sc_engine.h ****  * Careful: This is not threadsafe!!!
 256:.\source\rte/sc_engine.h ****  *
 257:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 258:.\source\rte/sc_engine.h ****  * @return sc_engine_data_t*: pointer to the current value of the application data buffer
 259:.\source\rte/sc_engine.h ****  *
 260:.\source\rte/sc_engine.h ****  **/
 261:.\source\rte/sc_engine.h **** inline SC_ENGINE_data_t* RTE_SC_ENGINE_getPtr( SC_ENGINE_t * const signal )
 262:.\source\rte/sc_engine.h **** {               
 263:.\source\rte/sc_engine.h ****    //Todo: Critical region cannot be protected using return values																						
 264:.\source\rte/sc_engine.h ****    return &(signal->value);                                                                        
 265:.\source\rte/sc_engine.h **** }
 266:.\source\rte/sc_engine.h **** 
 267:.\source\rte/sc_engine.h **** /**
 268:.\source\rte/sc_engine.h ****  * Returns the current application value of the passed signal instance.
 269:.\source\rte/sc_engine.h ****  *
 270:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 271:.\source\rte/sc_engine.h ****  * @return sc_engine_data_t: current value of the application data buffer
 272:.\source\rte/sc_engine.h ****  *
 273:.\source\rte/sc_engine.h ****  **/
 274:.\source\rte/sc_engine.h **** inline SC_ENGINE_data_t RTE_SC_ENGINE_get( const SC_ENGINE_t * const signal )
 275:.\source\rte/sc_engine.h **** {               
 276:.\source\rte/sc_engine.h ****    //Todo: Critical region cannot be protected using return values																						
 277:.\source\rte/sc_engine.h ****    return signal->value;                                                                           
 278:.\source\rte/sc_engine.h **** }                                                                                                  
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 13


 279:.\source\rte/sc_engine.h ****                                                                                                    
 280:.\source\rte/sc_engine.h **** /**
 281:.\source\rte/sc_engine.h ****  * Returns the current application value of the passed signal instance threadsafe.
 282:.\source\rte/sc_engine.h ****  *
 283:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 284:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_data_t* data: Pointer to the return data Pointer to the signal object
 285:.\source\rte/sc_engine.h ****  * @return RC_SUCCESS
 286:.\source\rte/sc_engine.h ****  *
 287:.\source\rte/sc_engine.h ****  **/
 288:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_getThreadSafe( const SC_ENGINE_t * const signal, SC_ENGINE_data_t * const
 289:.\source\rte/sc_engine.h **** {    
 290:.\source\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 291:.\source\rte/sc_engine.h ****    *data = signal->value;
 292:.\source\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);        
 293:.\source\rte/sc_engine.h **** 
 294:.\source\rte/sc_engine.h ****    return RC_SUCCESS;                                                                   
 295:.\source\rte/sc_engine.h ****    
 296:.\source\rte/sc_engine.h **** }                                                                                                  
 297:.\source\rte/sc_engine.h ****                                                                                                    
 298:.\source\rte/sc_engine.h **** /**
 299:.\source\rte/sc_engine.h ****  * Sets a new application value to the passed signal instance by passing the new value.
 300:.\source\rte/sc_engine.h ****  * The corresponding driver raw value will be calculated immediately by using the default conversio
 301:.\source\rte/sc_engine.h ****  * signal specific scaling function.
 302:.\source\rte/sc_engine.h ****  * The signal age will be set to 0 and the new status will be 'RTE_SIGNALSTATUS_VALID'.
 303:.\source\rte/sc_engine.h ****  *
 304:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 305:.\source\rte/sc_engine.h ****  * @param  sc_engine_data_t const value: value for the application data buffer
 306:.\source\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 307:.\source\rte/sc_engine.h ****  *
 308:.\source\rte/sc_engine.h ****  **/
 309:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_set(SC_ENGINE_t * const signal, const SC_ENGINE_data_t value  )
 310:.\source\rte/sc_engine.h **** {
 311:.\source\rte/sc_engine.h **** 
 312:.\source\rte/sc_engine.h ****    RC_t ret = RC_SUCCESS;
 313:.\source\rte/sc_engine.h ****    size_t taskNum=0;
 314:.\source\rte/sc_engine.h **** 
 315:.\source\rte/sc_engine.h **** 
 316:.\source\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
  66              		.loc 3 316 0
  67 0010 164B     		ldr	r3, .L12+4
  68 0012 9968     		ldr	r1, [r3, #8]
  69              	.LVL5:
 317:.\source\rte/sc_engine.h ****    signal->value  = value;
  70              		.loc 3 317 0
  71 0014 1A70     		strb	r2, [r3]
 318:.\source\rte/sc_engine.h ****    signal->age    = 0;
  72              		.loc 3 318 0
  73 0016 0022     		movs	r2, #0
  74              	.LVL6:
  75 0018 5A60     		str	r2, [r3, #4]
 319:.\source\rte/sc_engine.h ****    signal->status = RTE_SIGNALSTATUS_VALID;
  76              		.loc 3 319 0
  77 001a 0222     		movs	r2, #2
  78 001c 5A70     		strb	r2, [r3, #1]
 320:.\source\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);
 321:.\source\rte/sc_engine.h **** 
 322:.\source\rte/sc_engine.h ****    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 14


 323:.\source\rte/sc_engine.h ****    TaskTypeArray* pTaskArray = signal->pSigCfg->onUpdateTasks;
  79              		.loc 3 323 0
  80 001e 4D69     		ldr	r5, [r1, #20]
  81              	.LVL7:
 324:.\source\rte/sc_engine.h **** 
 325:.\source\rte/sc_engine.h ****    if (0 != signal->pSigCfg->evOnUpdate && NULL != pTaskArray){
  82              		.loc 3 325 0
  83 0020 8B68     		ldr	r3, [r1, #8]
  84 0022 73B1     		cbz	r3, .L4
  85 0024 3DB9     		cbnz	r5, .L9
  86 0026 0CE0     		b	.L4
  87              	.LVL8:
  88              	.L6:
  89              	.LBB17:
 326:.\source\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 327:.\source\rte/sc_engine.h **** 		  
 328:.\source\rte/sc_engine.h ****           TaskType task = (*pTaskArray)[taskNum];
 329:.\source\rte/sc_engine.h **** 	      SetEvent( task, signal->pSigCfg->evOnUpdate);
  90              		.loc 3 329 0
  91 0028 9968     		ldr	r1, [r3, #8]
  92 002a 55F82400 		ldr	r0, [r5, r4, lsl #2]
  93 002e FFF7FEFF 		bl	EE_oo_SetEvent
  94              	.LVL9:
  95              	.LBE17:
 326:.\source\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
  96              		.loc 3 326 0
  97 0032 0134     		adds	r4, r4, #1
  98              	.LVL10:
  99 0034 00E0     		b	.L5
 100              	.LVL11:
 101              	.L9:
 325:.\source\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 102              		.loc 3 325 0
 103 0036 0024     		movs	r4, #0
 104              	.LVL12:
 105              	.L5:
 326:.\source\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 106              		.loc 3 326 0
 107 0038 0C4B     		ldr	r3, .L12+4
 108 003a 9B68     		ldr	r3, [r3, #8]
 109 003c 1A69     		ldr	r2, [r3, #16]
 110 003e 9442     		cmp	r4, r2
 111 0040 F2D3     		bcc	.L6
 112              	.LVL13:
 113              	.L4:
 114              	.LBE16:
 115              	.LBE15:
 116              	.LBB18:
 117              	.LBB19:
 330:.\source\rte/sc_engine.h ****       }
 331:.\source\rte/sc_engine.h ****    }
 332:.\source\rte/sc_engine.h **** 
 333:.\source\rte/sc_engine.h ****    return ret;
 334:.\source\rte/sc_engine.h **** }                                                                                                  
 335:.\source\rte/sc_engine.h ****                                                                                                    
 336:.\source\rte/sc_engine.h ****                                                                                                    
 337:.\source\rte/sc_engine.h **** /**************************************************************************************************
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 15


 338:.\source\rte/sc_engine.h **** /* Call functions to the connected drivers																			*/
 339:.\source\rte/sc_engine.h **** /**************************************************************************************************
 340:.\source\rte/sc_engine.h **** 
 341:.\source\rte/sc_engine.h ****                                                                                                    
 342:.\source\rte/sc_engine.h **** /**
 343:.\source\rte/sc_engine.h ****  *  Calls the connected driver interface to get a new value.
 344:.\source\rte/sc_engine.h ****  *
 345:.\source\rte/sc_engine.h ****  * @param SC_ENGINE_t * const signal: Pointer to the signal object
 346:.\source\rte/sc_engine.h ****  * @return  RC_t: Return value of the driver call
 347:.\source\rte/sc_engine.h ****  *
 348:.\source\rte/sc_engine.h ****  */
 349:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_pullPort( SC_ENGINE_t * const signal )
 350:.\source\rte/sc_engine.h **** {                                                                                                  
 351:.\source\rte/sc_engine.h ****    RC_t ret = RC_SUCCESS;
 352:.\source\rte/sc_engine.h **** 
 353:.\source\rte/sc_engine.h ****                                                                                                    
 354:.\source\rte/sc_engine.h ****    if ( NULL != signal->pSigCfg->inDriver )
 355:.\source\rte/sc_engine.h ****    {
 356:.\source\rte/sc_engine.h **** 	  SC_ENGINE_data_t value = signal->value;
 357:.\source\rte/sc_engine.h ****       ret = signal->pSigCfg->inDriver(&value);
 358:.\source\rte/sc_engine.h ****                                                                                                    
 359:.\source\rte/sc_engine.h ****       if ( ret == RC_SUCCESS )                                                                     
 360:.\source\rte/sc_engine.h ****       {
 361:.\source\rte/sc_engine.h ****     	  //Critical Section
 362:.\source\rte/sc_engine.h ****     	  RTE_SC_ENGINE_set(signal, value);
 363:.\source\rte/sc_engine.h ****       }
 364:.\source\rte/sc_engine.h ****       else
 365:.\source\rte/sc_engine.h ****       {
 366:.\source\rte/sc_engine.h **** 		  //Signal is invalid. Error event (if present) will be fired
 367:.\source\rte/sc_engine.h **** 		  RTE_SC_ENGINE_setStatus(signal, RTE_SIGNALSTATUS_INVALID);
 368:.\source\rte/sc_engine.h ****       }
 369:.\source\rte/sc_engine.h **** 
 370:.\source\rte/sc_engine.h ****    }                                                                                               
 371:.\source\rte/sc_engine.h ****                                                                                                    
 372:.\source\rte/sc_engine.h ****    return ret;                                                                                     
 373:.\source\rte/sc_engine.h **** }                                                                                                  
 374:.\source\rte/sc_engine.h ****                                                                                                    
 375:.\source\rte/sc_engine.h **** /**
 376:.\source\rte/sc_engine.h ****  *  Calls the connected driver interfaces to send a value. Value will not be sent if it is INVALID.
 377:.\source\rte/sc_engine.h ****  *
 378:.\source\rte/sc_engine.h ****  * @param SC_ENGINE_t * const signal: Pointer to the signal object
 379:.\source\rte/sc_engine.h ****  * @return  RC_t: Return value of the driver call
 380:.\source\rte/sc_engine.h ****  *
 381:.\source\rte/sc_engine.h ****  **/
 382:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_pushPort( const SC_ENGINE_t * const signal )
 383:.\source\rte/sc_engine.h **** {                                                                                                  
 384:.\source\rte/sc_engine.h ****    RC_t ret = RC_ERROR;
 385:.\source\rte/sc_engine.h **** 
 386:.\source\rte/sc_engine.h ****    if (RTE_SIGNALSTATUS_VALID == signal->status)
 118              		.loc 3 386 0
 119 0042 0A4B     		ldr	r3, .L12+4
 120 0044 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 121 0046 022B     		cmp	r3, #2
 122 0048 04D1     		bne	.L10
 387:.\source\rte/sc_engine.h ****    {
 388:.\source\rte/sc_engine.h **** 	   ret = signal->pSigCfg->outDriver(&(signal->value));
 123              		.loc 3 388 0
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 16


 124 004a 0848     		ldr	r0, .L12+4
 125 004c 8368     		ldr	r3, [r0, #8]
 126 004e 5B68     		ldr	r3, [r3, #4]
 127 0050 9847     		blx	r3
 128              	.LVL14:
 129 0052 01E0     		b	.L7
 130              	.LVL15:
 131              	.L10:
 384:.\source\rte/sc_engine.h **** 
 132              		.loc 3 384 0
 133 0054 4FF0FF30 		mov	r0, #-1
 134              	.LVL16:
 135              	.L7:
 136              	.LBE19:
 137              	.LBE18:
  64:source\asw/swc_engine.c ****     }
  65:source\asw/swc_engine.c ****     RC_t returnState1, returnState2;
  66:source\asw/swc_engine.c ****     returnState1 = RTE_SC_ENGINE_set(&SO_ENGINE_signal, myEngine);
  67:source\asw/swc_engine.c ****     if(returnState1 == RC_SUCCESS)
  68:source\asw/swc_engine.c ****     { 
  69:source\asw/swc_engine.c ****         returnState2 = RTE_SC_ENGINE_pushPort(&SO_ENGINE_signal);
  70:source\asw/swc_engine.c ****         if(returnState2 != RC_SUCCESS)
 138              		.loc 1 70 0
 139 0058 10B1     		cbz	r0, .L8
  71:source\asw/swc_engine.c ****         {
  72:source\asw/swc_engine.c ****             UART_LOG_PutString("Error updating the engine signal driver\r\n");
 140              		.loc 1 72 0
 141 005a 0548     		ldr	r0, .L12+8
 142 005c FFF7FEFF 		bl	UART_LOG_PutString
 143              	.LVL17:
 144              	.L8:
  73:source\asw/swc_engine.c ****         }
  74:source\asw/swc_engine.c ****     }
  75:source\asw/swc_engine.c ****     else
  76:source\asw/swc_engine.c ****     {
  77:source\asw/swc_engine.c ****         UART_LOG_PutString("Engine signal not updated \r\n");
  78:source\asw/swc_engine.c ****     }
  79:source\asw/swc_engine.c ****     
  80:source\asw/swc_engine.c ****     WD_Alive(run_engine_pos);
 145              		.loc 1 80 0
 146 0060 0220     		movs	r0, #2
 147 0062 FFF7FEFF 		bl	WD_Alive
 148              	.LVL18:
 149 0066 38BD     		pop	{r3, r4, r5, pc}
 150              	.L13:
 151              		.align	2
 152              	.L12:
 153 0068 00000000 		.word	SO_SPEED_signal
 154 006c 00000000 		.word	SO_ENGINE_signal
 155 0070 00000000 		.word	.LC0
 156              		.cfi_endproc
 157              	.LFE155:
 158              		.size	ENGINE_setEngine_run, .-ENGINE_setEngine_run
 159              		.section	.rodata.str1.4,"aMS",%progbits,1
 160              		.align	2
 161              	.LC0:
 162 0000 4572726F 		.ascii	"Error updating the engine signal driver\015\012\000"
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 17


 162      72207570 
 162      64617469 
 162      6E672074 
 162      68652065 
 163              		.text
 164              	.Letext0:
 165              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 166              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 167              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 168              		.file 7 "Generated_Source\\PSoC5/ErikaOS_1_common_ee_types.inc"
 169              		.file 8 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc"
 170              		.file 9 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_common.inc"
 171              		.file 10 ".\\source\\bsw/global.h"
 172              		.file 11 ".\\source\\rte/rte_types.h"
 173              		.file 12 ".\\source\\rte/rte.h"
 174              		.file 13 ".\\source\\rte/sc_speed_type.h"
 175              		.file 14 ".\\source\\rte/sc_engine_type.h"
 176              		.file 15 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_intfunc.inc"
 177              		.file 16 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc"
 178              		.file 17 "Generated_Source\\PSoC5/ErikaOS_1_common_ee_primitives.inc"
 179              		.file 18 "Generated_Source\\PSoC5/core_cm3.h"
 180              		.file 19 ".\\source\\rte/sp_common.h"
 181              		.file 20 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_kernel.inc"
 182              		.file 21 "Generated_Source\\PSoC5/UART_LOG.h"
 183              		.file 22 "./watchdog_timer.h"
 184              		.section	.debug_info,"",%progbits
 185              	.Ldebug_info0:
 186 0000 DC070000 		.4byte	0x7dc
 187 0004 0400     		.2byte	0x4
 188 0006 00000000 		.4byte	.Ldebug_abbrev0
 189 000a 04       		.byte	0x4
 190 000b 01       		.uleb128 0x1
 191 000c EC060000 		.4byte	.LASF116
 192 0010 0C       		.byte	0xc
 193 0011 8C020000 		.4byte	.LASF117
 194 0015 F0040000 		.4byte	.LASF118
 195 0019 00000000 		.4byte	.Ldebug_ranges0+0
 196 001d 00000000 		.4byte	0
 197 0021 00000000 		.4byte	.Ldebug_line0
 198 0025 02       		.uleb128 0x2
 199 0026 01       		.byte	0x1
 200 0027 06       		.byte	0x6
 201 0028 98030000 		.4byte	.LASF0
 202 002c 03       		.uleb128 0x3
 203 002d CB020000 		.4byte	.LASF4
 204 0031 04       		.byte	0x4
 205 0032 1D       		.byte	0x1d
 206 0033 37000000 		.4byte	0x37
 207 0037 02       		.uleb128 0x2
 208 0038 01       		.byte	0x1
 209 0039 08       		.byte	0x8
 210 003a 81030000 		.4byte	.LASF1
 211 003e 02       		.uleb128 0x2
 212 003f 02       		.byte	0x2
 213 0040 05       		.byte	0x5
 214 0041 6B000000 		.4byte	.LASF2
 215 0045 02       		.uleb128 0x2
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 18


 216 0046 02       		.byte	0x2
 217 0047 07       		.byte	0x7
 218 0048 AB040000 		.4byte	.LASF3
 219 004c 03       		.uleb128 0x3
 220 004d 20060000 		.4byte	.LASF5
 221 0051 04       		.byte	0x4
 222 0052 3F       		.byte	0x3f
 223 0053 57000000 		.4byte	0x57
 224 0057 02       		.uleb128 0x2
 225 0058 04       		.byte	0x4
 226 0059 05       		.byte	0x5
 227 005a 5A020000 		.4byte	.LASF6
 228 005e 03       		.uleb128 0x3
 229 005f EF000000 		.4byte	.LASF7
 230 0063 04       		.byte	0x4
 231 0064 41       		.byte	0x41
 232 0065 69000000 		.4byte	0x69
 233 0069 02       		.uleb128 0x2
 234 006a 04       		.byte	0x4
 235 006b 07       		.byte	0x7
 236 006c 93050000 		.4byte	.LASF8
 237 0070 02       		.uleb128 0x2
 238 0071 08       		.byte	0x8
 239 0072 05       		.byte	0x5
 240 0073 FC010000 		.4byte	.LASF9
 241 0077 02       		.uleb128 0x2
 242 0078 08       		.byte	0x8
 243 0079 07       		.byte	0x7
 244 007a A4030000 		.4byte	.LASF10
 245 007e 04       		.uleb128 0x4
 246 007f 04       		.byte	0x4
 247 0080 05       		.byte	0x5
 248 0081 696E7400 		.ascii	"int\000"
 249 0085 02       		.uleb128 0x2
 250 0086 04       		.byte	0x4
 251 0087 07       		.byte	0x7
 252 0088 D0030000 		.4byte	.LASF11
 253 008c 03       		.uleb128 0x3
 254 008d 2A060000 		.4byte	.LASF12
 255 0091 05       		.byte	0x5
 256 0092 18       		.byte	0x18
 257 0093 2C000000 		.4byte	0x2c
 258 0097 03       		.uleb128 0x3
 259 0098 A3040000 		.4byte	.LASF13
 260 009c 05       		.byte	0x5
 261 009d 2C       		.byte	0x2c
 262 009e 4C000000 		.4byte	0x4c
 263 00a2 03       		.uleb128 0x3
 264 00a3 92010000 		.4byte	.LASF14
 265 00a7 05       		.byte	0x5
 266 00a8 30       		.byte	0x30
 267 00a9 5E000000 		.4byte	0x5e
 268 00ad 02       		.uleb128 0x2
 269 00ae 04       		.byte	0x4
 270 00af 04       		.byte	0x4
 271 00b0 B9010000 		.4byte	.LASF15
 272 00b4 02       		.uleb128 0x2
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 19


 273 00b5 08       		.byte	0x8
 274 00b6 04       		.byte	0x4
 275 00b7 83060000 		.4byte	.LASF16
 276 00bb 02       		.uleb128 0x2
 277 00bc 01       		.byte	0x1
 278 00bd 08       		.byte	0x8
 279 00be 55040000 		.4byte	.LASF17
 280 00c2 03       		.uleb128 0x3
 281 00c3 75000000 		.4byte	.LASF18
 282 00c7 06       		.byte	0x6
 283 00c8 D8       		.byte	0xd8
 284 00c9 85000000 		.4byte	0x85
 285 00cd 02       		.uleb128 0x2
 286 00ce 08       		.byte	0x8
 287 00cf 04       		.byte	0x4
 288 00d0 5B030000 		.4byte	.LASF19
 289 00d4 03       		.uleb128 0x3
 290 00d5 32040000 		.4byte	.LASF20
 291 00d9 07       		.byte	0x7
 292 00da 53       		.byte	0x53
 293 00db 7E000000 		.4byte	0x7e
 294 00df 03       		.uleb128 0x3
 295 00e0 02010000 		.4byte	.LASF21
 296 00e4 07       		.byte	0x7
 297 00e5 54       		.byte	0x54
 298 00e6 85000000 		.4byte	0x85
 299 00ea 03       		.uleb128 0x3
 300 00eb 2B000000 		.4byte	.LASF22
 301 00ef 08       		.byte	0x8
 302 00f0 4D       		.byte	0x4d
 303 00f1 DF000000 		.4byte	0xdf
 304 00f5 03       		.uleb128 0x3
 305 00f6 FA000000 		.4byte	.LASF23
 306 00fa 08       		.byte	0x8
 307 00fb 4F       		.byte	0x4f
 308 00fc DF000000 		.4byte	0xdf
 309 0100 03       		.uleb128 0x3
 310 0101 0C010000 		.4byte	.LASF24
 311 0105 08       		.byte	0x8
 312 0106 78       		.byte	0x78
 313 0107 D4000000 		.4byte	0xd4
 314 010b 05       		.uleb128 0x5
 315 010c 78030000 		.4byte	.LASF25
 316 0110 09       		.byte	0x9
 317 0111 F701     		.2byte	0x1f7
 318 0113 00010000 		.4byte	0x100
 319 0117 05       		.uleb128 0x5
 320 0118 5D000000 		.4byte	.LASF26
 321 011c 09       		.byte	0x9
 322 011d 2C02     		.2byte	0x22c
 323 011f EA000000 		.4byte	0xea
 324 0123 02       		.uleb128 0x2
 325 0124 04       		.byte	0x4
 326 0125 07       		.byte	0x7
 327 0126 91000000 		.4byte	.LASF27
 328 012a 03       		.uleb128 0x3
 329 012b 18030000 		.4byte	.LASF28
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 20


 330 012f 0A       		.byte	0xa
 331 0130 9C       		.byte	0x9c
 332 0131 37000000 		.4byte	0x37
 333 0135 06       		.uleb128 0x6
 334 0136 01       		.byte	0x1
 335 0137 25000000 		.4byte	0x25
 336 013b 0A       		.byte	0xa
 337 013c CF       		.byte	0xcf
 338 013d DE010000 		.4byte	0x1de
 339 0141 07       		.uleb128 0x7
 340 0142 33000000 		.4byte	.LASF29
 341 0146 00       		.byte	0
 342 0147 08       		.uleb128 0x8
 343 0148 67030000 		.4byte	.LASF30
 344 014c 7F       		.sleb128 -1
 345 014d 08       		.uleb128 0x8
 346 014e 0B040000 		.4byte	.LASF31
 347 0152 7E       		.sleb128 -2
 348 0153 08       		.uleb128 0x8
 349 0154 F0050000 		.4byte	.LASF32
 350 0158 7D       		.sleb128 -3
 351 0159 08       		.uleb128 0x8
 352 015a 7A070000 		.4byte	.LASF33
 353 015e 7C       		.sleb128 -4
 354 015f 08       		.uleb128 0x8
 355 0160 9B010000 		.4byte	.LASF34
 356 0164 7B       		.sleb128 -5
 357 0165 08       		.uleb128 0x8
 358 0166 FE050000 		.4byte	.LASF35
 359 016a 7A       		.sleb128 -6
 360 016b 08       		.uleb128 0x8
 361 016c 63020000 		.4byte	.LASF36
 362 0170 79       		.sleb128 -7
 363 0171 08       		.uleb128 0x8
 364 0172 C9050000 		.4byte	.LASF37
 365 0176 78       		.sleb128 -8
 366 0177 08       		.uleb128 0x8
 367 0178 B0070000 		.4byte	.LASF38
 368 017c 77       		.sleb128 -9
 369 017d 08       		.uleb128 0x8
 370 017e A4020000 		.4byte	.LASF39
 371 0182 76       		.sleb128 -10
 372 0183 08       		.uleb128 0x8
 373 0184 CB070000 		.4byte	.LASF40
 374 0188 75       		.sleb128 -11
 375 0189 08       		.uleb128 0x8
 376 018a DD030000 		.4byte	.LASF41
 377 018e 74       		.sleb128 -12
 378 018f 08       		.uleb128 0x8
 379 0190 DE050000 		.4byte	.LASF42
 380 0194 73       		.sleb128 -13
 381 0195 08       		.uleb128 0x8
 382 0196 22030000 		.4byte	.LASF43
 383 019a 72       		.sleb128 -14
 384 019b 08       		.uleb128 0x8
 385 019c BF010000 		.4byte	.LASF44
 386 01a0 71       		.sleb128 -15
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 21


 387 01a1 08       		.uleb128 0x8
 388 01a2 D5020000 		.4byte	.LASF45
 389 01a6 70       		.sleb128 -16
 390 01a7 08       		.uleb128 0x8
 391 01a8 DB000000 		.4byte	.LASF46
 392 01ac 6F       		.sleb128 -17
 393 01ad 08       		.uleb128 0x8
 394 01ae 7C000000 		.4byte	.LASF47
 395 01b2 6E       		.sleb128 -18
 396 01b3 08       		.uleb128 0x8
 397 01b4 23020000 		.4byte	.LASF48
 398 01b8 6D       		.sleb128 -19
 399 01b9 08       		.uleb128 0x8
 400 01ba BE040000 		.4byte	.LASF49
 401 01be 6C       		.sleb128 -20
 402 01bf 08       		.uleb128 0x8
 403 01c0 06030000 		.4byte	.LASF50
 404 01c4 6B       		.sleb128 -21
 405 01c5 08       		.uleb128 0x8
 406 01c6 64060000 		.4byte	.LASF51
 407 01ca 6A       		.sleb128 -22
 408 01cb 08       		.uleb128 0x8
 409 01cc 40010000 		.4byte	.LASF52
 410 01d0 69       		.sleb128 -23
 411 01d1 08       		.uleb128 0x8
 412 01d2 36020000 		.4byte	.LASF53
 413 01d6 68       		.sleb128 -24
 414 01d7 08       		.uleb128 0x8
 415 01d8 E3010000 		.4byte	.LASF54
 416 01dc 67       		.sleb128 -25
 417 01dd 00       		.byte	0
 418 01de 03       		.uleb128 0x3
 419 01df C6070000 		.4byte	.LASF55
 420 01e3 0A       		.byte	0xa
 421 01e4 EA       		.byte	0xea
 422 01e5 35010000 		.4byte	0x135
 423 01e9 03       		.uleb128 0x3
 424 01ea A2070000 		.4byte	.LASF56
 425 01ee 0B       		.byte	0xb
 426 01ef 19       		.byte	0x19
 427 01f0 F4010000 		.4byte	0x1f4
 428 01f4 09       		.uleb128 0x9
 429 01f5 0B010000 		.4byte	0x10b
 430 01f9 FF010000 		.4byte	0x1ff
 431 01fd 0A       		.uleb128 0xa
 432 01fe 00       		.byte	0
 433 01ff 03       		.uleb128 0x3
 434 0200 32060000 		.4byte	.LASF57
 435 0204 0B       		.byte	0xb
 436 0205 21       		.byte	0x21
 437 0206 17010000 		.4byte	0x117
 438 020a 03       		.uleb128 0x3
 439 020b 76060000 		.4byte	.LASF58
 440 020f 0B       		.byte	0xb
 441 0210 2D       		.byte	0x2d
 442 0211 A2000000 		.4byte	0xa2
 443 0215 06       		.uleb128 0x6
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 22


 444 0216 01       		.byte	0x1
 445 0217 37000000 		.4byte	0x37
 446 021b 0C       		.byte	0xc
 447 021c 59       		.byte	0x59
 448 021d 3A020000 		.4byte	0x23a
 449 0221 07       		.uleb128 0x7
 450 0222 B2020000 		.4byte	.LASF59
 451 0226 00       		.byte	0
 452 0227 07       		.uleb128 0x7
 453 0228 86040000 		.4byte	.LASF60
 454 022c 01       		.byte	0x1
 455 022d 07       		.uleb128 0x7
 456 022e 9F060000 		.4byte	.LASF61
 457 0232 02       		.byte	0x2
 458 0233 07       		.uleb128 0x7
 459 0234 6D040000 		.4byte	.LASF62
 460 0238 03       		.byte	0x3
 461 0239 00       		.byte	0
 462 023a 03       		.uleb128 0x3
 463 023b 47020000 		.4byte	.LASF63
 464 023f 0C       		.byte	0xc
 465 0240 5E       		.byte	0x5e
 466 0241 15020000 		.4byte	0x215
 467 0245 0B       		.uleb128 0xb
 468 0246 17010000 		.4byte	0x117
 469 024a 0B       		.uleb128 0xb
 470 024b C2000000 		.4byte	0xc2
 471 024f 0C       		.uleb128 0xc
 472 0250 04       		.byte	0x4
 473 0251 E9010000 		.4byte	0x1e9
 474 0255 0B       		.uleb128 0xb
 475 0256 4F020000 		.4byte	0x24f
 476 025a 0B       		.uleb128 0xb
 477 025b 2A010000 		.4byte	0x12a
 478 025f 0B       		.uleb128 0xb
 479 0260 0A020000 		.4byte	0x20a
 480 0264 0D       		.uleb128 0xd
 481 0265 01       		.byte	0x1
 482 0266 0D       		.byte	0xd
 483 0267 21       		.byte	0x21
 484 0268 79020000 		.4byte	0x279
 485 026c 0E       		.uleb128 0xe
 486 026d 13010000 		.4byte	.LASF67
 487 0271 0D       		.byte	0xd
 488 0272 23       		.byte	0x23
 489 0273 8C000000 		.4byte	0x8c
 490 0277 00       		.byte	0
 491 0278 00       		.byte	0
 492 0279 03       		.uleb128 0x3
 493 027a 30010000 		.4byte	.LASF64
 494 027e 0D       		.byte	0xd
 495 027f 26       		.byte	0x26
 496 0280 64020000 		.4byte	0x264
 497 0284 03       		.uleb128 0x3
 498 0285 50060000 		.4byte	.LASF65
 499 0289 02       		.byte	0x2
 500 028a 26       		.byte	0x26
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 23


 501 028b 8F020000 		.4byte	0x28f
 502 028f 0C       		.uleb128 0xc
 503 0290 04       		.byte	0x4
 504 0291 95020000 		.4byte	0x295
 505 0295 0F       		.uleb128 0xf
 506 0296 DE010000 		.4byte	0x1de
 507 029a A4020000 		.4byte	0x2a4
 508 029e 10       		.uleb128 0x10
 509 029f AA020000 		.4byte	0x2aa
 510 02a3 00       		.byte	0
 511 02a4 0C       		.uleb128 0xc
 512 02a5 04       		.byte	0x4
 513 02a6 79020000 		.4byte	0x279
 514 02aa 0B       		.uleb128 0xb
 515 02ab A4020000 		.4byte	0x2a4
 516 02af 03       		.uleb128 0x3
 517 02b0 3E000000 		.4byte	.LASF66
 518 02b4 02       		.byte	0x2
 519 02b5 2C       		.byte	0x2c
 520 02b6 BA020000 		.4byte	0x2ba
 521 02ba 0C       		.uleb128 0xc
 522 02bb 04       		.byte	0x4
 523 02bc C0020000 		.4byte	0x2c0
 524 02c0 0F       		.uleb128 0xf
 525 02c1 DE010000 		.4byte	0x1de
 526 02c5 CF020000 		.4byte	0x2cf
 527 02c9 10       		.uleb128 0x10
 528 02ca DA020000 		.4byte	0x2da
 529 02ce 00       		.byte	0
 530 02cf 0C       		.uleb128 0xc
 531 02d0 04       		.byte	0x4
 532 02d1 D5020000 		.4byte	0x2d5
 533 02d5 0B       		.uleb128 0xb
 534 02d6 79020000 		.4byte	0x279
 535 02da 0B       		.uleb128 0xb
 536 02db CF020000 		.4byte	0x2cf
 537 02df 11       		.uleb128 0x11
 538 02e0 57010000 		.4byte	.LASF79
 539 02e4 28       		.byte	0x28
 540 02e5 02       		.byte	0x2
 541 02e6 36       		.byte	0x36
 542 02e7 64030000 		.4byte	0x364
 543 02eb 0E       		.uleb128 0xe
 544 02ec D6060000 		.4byte	.LASF68
 545 02f0 02       		.byte	0x2
 546 02f1 3B       		.byte	0x3b
 547 02f2 64030000 		.4byte	0x364
 548 02f6 00       		.byte	0
 549 02f7 0E       		.uleb128 0xe
 550 02f8 35030000 		.4byte	.LASF69
 551 02fc 02       		.byte	0x2
 552 02fd 40       		.byte	0x40
 553 02fe 69030000 		.4byte	0x369
 554 0302 04       		.byte	0x4
 555 0303 0E       		.uleb128 0xe
 556 0304 43040000 		.4byte	.LASF70
 557 0308 02       		.byte	0x2
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 24


 558 0309 45       		.byte	0x45
 559 030a 45020000 		.4byte	0x245
 560 030e 08       		.byte	0x8
 561 030f 0E       		.uleb128 0xe
 562 0310 53000000 		.4byte	.LASF71
 563 0314 02       		.byte	0x2
 564 0315 4B       		.byte	0x4b
 565 0316 45020000 		.4byte	0x245
 566 031a 0C       		.byte	0xc
 567 031b 0E       		.uleb128 0xe
 568 031c DE040000 		.4byte	.LASF72
 569 0320 02       		.byte	0x2
 570 0321 50       		.byte	0x50
 571 0322 4A020000 		.4byte	0x24a
 572 0326 10       		.byte	0x10
 573 0327 0E       		.uleb128 0xe
 574 0328 BB050000 		.4byte	.LASF73
 575 032c 02       		.byte	0x2
 576 032d 55       		.byte	0x55
 577 032e 55020000 		.4byte	0x255
 578 0332 14       		.byte	0x14
 579 0333 0E       		.uleb128 0xe
 580 0334 1A000000 		.4byte	.LASF74
 581 0338 02       		.byte	0x2
 582 0339 5A       		.byte	0x5a
 583 033a 4A020000 		.4byte	0x24a
 584 033e 18       		.byte	0x18
 585 033f 0E       		.uleb128 0xe
 586 0340 D1040000 		.4byte	.LASF75
 587 0344 02       		.byte	0x2
 588 0345 5F       		.byte	0x5f
 589 0346 55020000 		.4byte	0x255
 590 034a 1C       		.byte	0x1c
 591 034b 0E       		.uleb128 0xe
 592 034c B6060000 		.4byte	.LASF76
 593 0350 02       		.byte	0x2
 594 0351 65       		.byte	0x65
 595 0352 5A020000 		.4byte	0x25a
 596 0356 20       		.byte	0x20
 597 0357 0E       		.uleb128 0xe
 598 0358 00000000 		.4byte	.LASF77
 599 035c 02       		.byte	0x2
 600 035d 6A       		.byte	0x6a
 601 035e 5F020000 		.4byte	0x25f
 602 0362 24       		.byte	0x24
 603 0363 00       		.byte	0
 604 0364 0B       		.uleb128 0xb
 605 0365 84020000 		.4byte	0x284
 606 0369 0B       		.uleb128 0xb
 607 036a AF020000 		.4byte	0x2af
 608 036e 03       		.uleb128 0x3
 609 036f 66010000 		.4byte	.LASF78
 610 0373 02       		.byte	0x2
 611 0374 6D       		.byte	0x6d
 612 0375 79030000 		.4byte	0x379
 613 0379 0B       		.uleb128 0xb
 614 037a DF020000 		.4byte	0x2df
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 25


 615 037e 11       		.uleb128 0x11
 616 037f C5000000 		.4byte	.LASF80
 617 0383 0C       		.byte	0xc
 618 0384 02       		.byte	0x2
 619 0385 79       		.byte	0x79
 620 0386 BB030000 		.4byte	0x3bb
 621 038a 0E       		.uleb128 0xe
 622 038b 1E010000 		.4byte	.LASF81
 623 038f 02       		.byte	0x2
 624 0390 7F       		.byte	0x7f
 625 0391 79020000 		.4byte	0x279
 626 0395 00       		.byte	0
 627 0396 0E       		.uleb128 0xe
 628 0397 4E040000 		.4byte	.LASF82
 629 039b 02       		.byte	0x2
 630 039c 84       		.byte	0x84
 631 039d 3A020000 		.4byte	0x23a
 632 03a1 01       		.byte	0x1
 633 03a2 12       		.uleb128 0x12
 634 03a3 61676500 		.ascii	"age\000"
 635 03a7 02       		.byte	0x2
 636 03a8 89       		.byte	0x89
 637 03a9 A2000000 		.4byte	0xa2
 638 03ad 04       		.byte	0x4
 639 03ae 0E       		.uleb128 0xe
 640 03af 3B040000 		.4byte	.LASF83
 641 03b3 02       		.byte	0x2
 642 03b4 8E       		.byte	0x8e
 643 03b5 C1030000 		.4byte	0x3c1
 644 03b9 08       		.byte	0x8
 645 03ba 00       		.byte	0
 646 03bb 0C       		.uleb128 0xc
 647 03bc 04       		.byte	0x4
 648 03bd 6E030000 		.4byte	0x36e
 649 03c1 0B       		.uleb128 0xb
 650 03c2 BB030000 		.4byte	0x3bb
 651 03c6 03       		.uleb128 0x3
 652 03c7 D0000000 		.4byte	.LASF84
 653 03cb 02       		.byte	0x2
 654 03cc 91       		.byte	0x91
 655 03cd 7E030000 		.4byte	0x37e
 656 03d1 0D       		.uleb128 0xd
 657 03d2 01       		.byte	0x1
 658 03d3 0E       		.byte	0xe
 659 03d4 21       		.byte	0x21
 660 03d5 E6030000 		.4byte	0x3e6
 661 03d9 0E       		.uleb128 0xe
 662 03da 09000000 		.4byte	.LASF85
 663 03de 0E       		.byte	0xe
 664 03df 23       		.byte	0x23
 665 03e0 8C000000 		.4byte	0x8c
 666 03e4 00       		.byte	0
 667 03e5 00       		.byte	0
 668 03e6 03       		.uleb128 0x3
 669 03e7 C5060000 		.4byte	.LASF86
 670 03eb 0E       		.byte	0xe
 671 03ec 26       		.byte	0x26
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 26


 672 03ed D1030000 		.4byte	0x3d1
 673 03f1 03       		.uleb128 0x3
 674 03f2 8A060000 		.4byte	.LASF87
 675 03f6 03       		.byte	0x3
 676 03f7 26       		.byte	0x26
 677 03f8 FC030000 		.4byte	0x3fc
 678 03fc 0C       		.uleb128 0xc
 679 03fd 04       		.byte	0x4
 680 03fe 02040000 		.4byte	0x402
 681 0402 0F       		.uleb128 0xf
 682 0403 DE010000 		.4byte	0x1de
 683 0407 11040000 		.4byte	0x411
 684 040b 10       		.uleb128 0x10
 685 040c 17040000 		.4byte	0x417
 686 0410 00       		.byte	0
 687 0411 0C       		.uleb128 0xc
 688 0412 04       		.byte	0x4
 689 0413 E6030000 		.4byte	0x3e6
 690 0417 0B       		.uleb128 0xb
 691 0418 11040000 		.4byte	0x411
 692 041c 03       		.uleb128 0x3
 693 041d A5050000 		.4byte	.LASF88
 694 0421 03       		.byte	0x3
 695 0422 2C       		.byte	0x2c
 696 0423 27040000 		.4byte	0x427
 697 0427 0C       		.uleb128 0xc
 698 0428 04       		.byte	0x4
 699 0429 2D040000 		.4byte	0x42d
 700 042d 0F       		.uleb128 0xf
 701 042e DE010000 		.4byte	0x1de
 702 0432 3C040000 		.4byte	0x43c
 703 0436 10       		.uleb128 0x10
 704 0437 47040000 		.4byte	0x447
 705 043b 00       		.byte	0
 706 043c 0C       		.uleb128 0xc
 707 043d 04       		.byte	0x4
 708 043e 42040000 		.4byte	0x442
 709 0442 0B       		.uleb128 0xb
 710 0443 E6030000 		.4byte	0x3e6
 711 0447 0B       		.uleb128 0xb
 712 0448 3C040000 		.4byte	0x43c
 713 044c 11       		.uleb128 0x11
 714 044d E6020000 		.4byte	.LASF89
 715 0451 28       		.byte	0x28
 716 0452 03       		.byte	0x3
 717 0453 36       		.byte	0x36
 718 0454 D1040000 		.4byte	0x4d1
 719 0458 0E       		.uleb128 0xe
 720 0459 D6060000 		.4byte	.LASF68
 721 045d 03       		.byte	0x3
 722 045e 3B       		.byte	0x3b
 723 045f D1040000 		.4byte	0x4d1
 724 0463 00       		.byte	0
 725 0464 0E       		.uleb128 0xe
 726 0465 35030000 		.4byte	.LASF69
 727 0469 03       		.byte	0x3
 728 046a 40       		.byte	0x40
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 27


 729 046b D6040000 		.4byte	0x4d6
 730 046f 04       		.byte	0x4
 731 0470 0E       		.uleb128 0xe
 732 0471 43040000 		.4byte	.LASF70
 733 0475 03       		.byte	0x3
 734 0476 45       		.byte	0x45
 735 0477 45020000 		.4byte	0x245
 736 047b 08       		.byte	0x8
 737 047c 0E       		.uleb128 0xe
 738 047d 53000000 		.4byte	.LASF71
 739 0481 03       		.byte	0x3
 740 0482 4B       		.byte	0x4b
 741 0483 45020000 		.4byte	0x245
 742 0487 0C       		.byte	0xc
 743 0488 0E       		.uleb128 0xe
 744 0489 DE040000 		.4byte	.LASF72
 745 048d 03       		.byte	0x3
 746 048e 50       		.byte	0x50
 747 048f 4A020000 		.4byte	0x24a
 748 0493 10       		.byte	0x10
 749 0494 0E       		.uleb128 0xe
 750 0495 BB050000 		.4byte	.LASF73
 751 0499 03       		.byte	0x3
 752 049a 55       		.byte	0x55
 753 049b 55020000 		.4byte	0x255
 754 049f 14       		.byte	0x14
 755 04a0 0E       		.uleb128 0xe
 756 04a1 1A000000 		.4byte	.LASF74
 757 04a5 03       		.byte	0x3
 758 04a6 5A       		.byte	0x5a
 759 04a7 4A020000 		.4byte	0x24a
 760 04ab 18       		.byte	0x18
 761 04ac 0E       		.uleb128 0xe
 762 04ad D1040000 		.4byte	.LASF75
 763 04b1 03       		.byte	0x3
 764 04b2 5F       		.byte	0x5f
 765 04b3 55020000 		.4byte	0x255
 766 04b7 1C       		.byte	0x1c
 767 04b8 0E       		.uleb128 0xe
 768 04b9 B6060000 		.4byte	.LASF76
 769 04bd 03       		.byte	0x3
 770 04be 65       		.byte	0x65
 771 04bf 5A020000 		.4byte	0x25a
 772 04c3 20       		.byte	0x20
 773 04c4 0E       		.uleb128 0xe
 774 04c5 00000000 		.4byte	.LASF77
 775 04c9 03       		.byte	0x3
 776 04ca 6A       		.byte	0x6a
 777 04cb 5F020000 		.4byte	0x25f
 778 04cf 24       		.byte	0x24
 779 04d0 00       		.byte	0
 780 04d1 0B       		.uleb128 0xb
 781 04d2 F1030000 		.4byte	0x3f1
 782 04d6 0B       		.uleb128 0xb
 783 04d7 1C040000 		.4byte	0x41c
 784 04db 03       		.uleb128 0x3
 785 04dc F6020000 		.4byte	.LASF90
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 28


 786 04e0 03       		.byte	0x3
 787 04e1 6D       		.byte	0x6d
 788 04e2 E6040000 		.4byte	0x4e6
 789 04e6 0B       		.uleb128 0xb
 790 04e7 4C040000 		.4byte	0x44c
 791 04eb 11       		.uleb128 0x11
 792 04ec 24010000 		.4byte	.LASF91
 793 04f0 0C       		.byte	0xc
 794 04f1 03       		.byte	0x3
 795 04f2 79       		.byte	0x79
 796 04f3 28050000 		.4byte	0x528
 797 04f7 0E       		.uleb128 0xe
 798 04f8 1E010000 		.4byte	.LASF81
 799 04fc 03       		.byte	0x3
 800 04fd 7F       		.byte	0x7f
 801 04fe E6030000 		.4byte	0x3e6
 802 0502 00       		.byte	0
 803 0503 0E       		.uleb128 0xe
 804 0504 4E040000 		.4byte	.LASF82
 805 0508 03       		.byte	0x3
 806 0509 84       		.byte	0x84
 807 050a 3A020000 		.4byte	0x23a
 808 050e 01       		.byte	0x1
 809 050f 12       		.uleb128 0x12
 810 0510 61676500 		.ascii	"age\000"
 811 0514 03       		.byte	0x3
 812 0515 89       		.byte	0x89
 813 0516 A2000000 		.4byte	0xa2
 814 051a 04       		.byte	0x4
 815 051b 0E       		.uleb128 0xe
 816 051c 3B040000 		.4byte	.LASF83
 817 0520 03       		.byte	0x3
 818 0521 8E       		.byte	0x8e
 819 0522 2E050000 		.4byte	0x52e
 820 0526 08       		.byte	0x8
 821 0527 00       		.byte	0
 822 0528 0C       		.uleb128 0xc
 823 0529 04       		.byte	0x4
 824 052a DB040000 		.4byte	0x4db
 825 052e 0B       		.uleb128 0xb
 826 052f 28050000 		.4byte	0x528
 827 0533 03       		.uleb128 0x3
 828 0534 61040000 		.4byte	.LASF92
 829 0538 03       		.byte	0x3
 830 0539 91       		.byte	0x91
 831 053a EB040000 		.4byte	0x4eb
 832 053e 13       		.uleb128 0x13
 833 053f 3C060000 		.4byte	.LASF93
 834 0543 02       		.byte	0x2
 835 0544 E4       		.byte	0xe4
 836 0545 A2000000 		.4byte	0xa2
 837 0549 03       		.byte	0x3
 838 054a 5A050000 		.4byte	0x55a
 839 054e 14       		.uleb128 0x14
 840 054f 5A040000 		.4byte	.LASF95
 841 0553 02       		.byte	0x2
 842 0554 E4       		.byte	0xe4
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 29


 843 0555 65050000 		.4byte	0x565
 844 0559 00       		.byte	0
 845 055a 0C       		.uleb128 0xc
 846 055b 04       		.byte	0x4
 847 055c 60050000 		.4byte	0x560
 848 0560 0B       		.uleb128 0xb
 849 0561 C6030000 		.4byte	0x3c6
 850 0565 0B       		.uleb128 0xb
 851 0566 5A050000 		.4byte	0x55a
 852 056a 15       		.uleb128 0x15
 853 056b B4000000 		.4byte	.LASF94
 854 056f 02       		.byte	0x2
 855 0570 1201     		.2byte	0x112
 856 0572 79020000 		.4byte	0x279
 857 0576 03       		.byte	0x3
 858 0577 88050000 		.4byte	0x588
 859 057b 16       		.uleb128 0x16
 860 057c 5A040000 		.4byte	.LASF95
 861 0580 02       		.byte	0x2
 862 0581 1201     		.2byte	0x112
 863 0583 65050000 		.4byte	0x565
 864 0587 00       		.byte	0
 865 0588 15       		.uleb128 0x15
 866 0589 80010000 		.4byte	.LASF96
 867 058d 03       		.byte	0x3
 868 058e 3501     		.2byte	0x135
 869 0590 DE010000 		.4byte	0x1de
 870 0594 03       		.byte	0x3
 871 0595 E4050000 		.4byte	0x5e4
 872 0599 16       		.uleb128 0x16
 873 059a 5A040000 		.4byte	.LASF95
 874 059e 03       		.byte	0x3
 875 059f 3501     		.2byte	0x135
 876 05a1 EA050000 		.4byte	0x5ea
 877 05a5 16       		.uleb128 0x16
 878 05a6 1E010000 		.4byte	.LASF81
 879 05aa 03       		.byte	0x3
 880 05ab 3501     		.2byte	0x135
 881 05ad 42040000 		.4byte	0x442
 882 05b1 17       		.uleb128 0x17
 883 05b2 72657400 		.ascii	"ret\000"
 884 05b6 03       		.byte	0x3
 885 05b7 3801     		.2byte	0x138
 886 05b9 DE010000 		.4byte	0x1de
 887 05bd 18       		.uleb128 0x18
 888 05be 70030000 		.4byte	.LASF97
 889 05c2 03       		.byte	0x3
 890 05c3 3901     		.2byte	0x139
 891 05c5 C2000000 		.4byte	0xc2
 892 05c9 18       		.uleb128 0x18
 893 05ca 75010000 		.4byte	.LASF98
 894 05ce 03       		.byte	0x3
 895 05cf 4301     		.2byte	0x143
 896 05d1 4F020000 		.4byte	0x24f
 897 05d5 19       		.uleb128 0x19
 898 05d6 18       		.uleb128 0x18
 899 05d7 AF000000 		.4byte	.LASF99
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 30


 900 05db 03       		.byte	0x3
 901 05dc 4801     		.2byte	0x148
 902 05de 0B010000 		.4byte	0x10b
 903 05e2 00       		.byte	0
 904 05e3 00       		.byte	0
 905 05e4 0C       		.uleb128 0xc
 906 05e5 04       		.byte	0x4
 907 05e6 33050000 		.4byte	0x533
 908 05ea 0B       		.uleb128 0xb
 909 05eb E4050000 		.4byte	0x5e4
 910 05ef 15       		.uleb128 0x15
 911 05f0 75020000 		.4byte	.LASF100
 912 05f4 03       		.byte	0x3
 913 05f5 7E01     		.2byte	0x17e
 914 05f7 DE010000 		.4byte	0x1de
 915 05fb 03       		.byte	0x3
 916 05fc 19060000 		.4byte	0x619
 917 0600 16       		.uleb128 0x16
 918 0601 5A040000 		.4byte	.LASF95
 919 0605 03       		.byte	0x3
 920 0606 7E01     		.2byte	0x17e
 921 0608 24060000 		.4byte	0x624
 922 060c 17       		.uleb128 0x17
 923 060d 72657400 		.ascii	"ret\000"
 924 0611 03       		.byte	0x3
 925 0612 8001     		.2byte	0x180
 926 0614 DE010000 		.4byte	0x1de
 927 0618 00       		.byte	0
 928 0619 0C       		.uleb128 0xc
 929 061a 04       		.byte	0x4
 930 061b 1F060000 		.4byte	0x61f
 931 061f 0B       		.uleb128 0xb
 932 0620 33050000 		.4byte	0x533
 933 0624 0B       		.uleb128 0xb
 934 0625 19060000 		.4byte	0x619
 935 0629 1A       		.uleb128 0x1a
 936 062a BB030000 		.4byte	.LASF119
 937 062e 01       		.byte	0x1
 938 062f 2C       		.byte	0x2c
 939 0630 00000000 		.4byte	.LFB155
 940 0634 74000000 		.4byte	.LFE155-.LFB155
 941 0638 01       		.uleb128 0x1
 942 0639 9C       		.byte	0x9c
 943 063a 5F070000 		.4byte	0x75f
 944 063e 1B       		.uleb128 0x1b
 945 063f 657600   		.ascii	"ev\000"
 946 0642 01       		.byte	0x1
 947 0643 2C       		.byte	0x2c
 948 0644 FF010000 		.4byte	0x1ff
 949 0648 00000000 		.4byte	.LLST0
 950 064c 1C       		.uleb128 0x1c
 951 064d 05040000 		.4byte	.LASF101
 952 0651 01       		.byte	0x1
 953 0652 2F       		.byte	0x2f
 954 0653 79020000 		.4byte	0x279
 955 0657 1D       		.uleb128 0x1d
 956 0658 52030000 		.4byte	.LASF103
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 31


 957 065c 01       		.byte	0x1
 958 065d 30       		.byte	0x30
 959 065e E6030000 		.4byte	0x3e6
 960 0662 3A000000 		.4byte	.LLST1
 961 0666 1C       		.uleb128 0x1c
 962 0667 EB030000 		.4byte	.LASF102
 963 066b 01       		.byte	0x1
 964 066c 41       		.byte	0x41
 965 066d DE010000 		.4byte	0x1de
 966 0671 1E       		.uleb128 0x1e
 967 0672 F8030000 		.4byte	.LASF104
 968 0676 01       		.byte	0x1
 969 0677 41       		.byte	0x41
 970 0678 DE010000 		.4byte	0x1de
 971 067c 01       		.uleb128 0x1
 972 067d 50       		.byte	0x50
 973 067e 1F       		.uleb128 0x1f
 974 067f 6A050000 		.4byte	0x56a
 975 0683 02000000 		.4byte	.LBB11
 976 0687 04000000 		.4byte	.LBE11-.LBB11
 977 068b 01       		.byte	0x1
 978 068c 2F       		.byte	0x2f
 979 068d 97060000 		.4byte	0x697
 980 0691 20       		.uleb128 0x20
 981 0692 7B050000 		.4byte	0x57b
 982 0696 00       		.byte	0
 983 0697 1F       		.uleb128 0x1f
 984 0698 3E050000 		.4byte	0x53e
 985 069c 06000000 		.4byte	.LBB13
 986 06a0 02000000 		.4byte	.LBE13-.LBB13
 987 06a4 01       		.byte	0x1
 988 06a5 31       		.byte	0x31
 989 06a6 B0060000 		.4byte	0x6b0
 990 06aa 20       		.uleb128 0x20
 991 06ab 4E050000 		.4byte	0x54e
 992 06af 00       		.byte	0
 993 06b0 1F       		.uleb128 0x1f
 994 06b1 88050000 		.4byte	0x588
 995 06b5 10000000 		.4byte	.LBB15
 996 06b9 32000000 		.4byte	.LBE15-.LBB15
 997 06bd 01       		.byte	0x1
 998 06be 42       		.byte	0x42
 999 06bf 0C070000 		.4byte	0x70c
 1000 06c3 20       		.uleb128 0x20
 1001 06c4 A5050000 		.4byte	0x5a5
 1002 06c8 20       		.uleb128 0x20
 1003 06c9 99050000 		.4byte	0x599
 1004 06cd 21       		.uleb128 0x21
 1005 06ce 10000000 		.4byte	.LBB16
 1006 06d2 32000000 		.4byte	.LBE16-.LBB16
 1007 06d6 22       		.uleb128 0x22
 1008 06d7 B1050000 		.4byte	0x5b1
 1009 06db 00       		.byte	0
 1010 06dc 23       		.uleb128 0x23
 1011 06dd BD050000 		.4byte	0x5bd
 1012 06e1 4D000000 		.4byte	.LLST2
 1013 06e5 23       		.uleb128 0x23
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 32


 1014 06e6 C9050000 		.4byte	0x5c9
 1015 06ea 83000000 		.4byte	.LLST3
 1016 06ee 21       		.uleb128 0x21
 1017 06ef 28000000 		.4byte	.LBB17
 1018 06f3 0A000000 		.4byte	.LBE17-.LBB17
 1019 06f7 23       		.uleb128 0x23
 1020 06f8 D6050000 		.4byte	0x5d6
 1021 06fc 96000000 		.4byte	.LLST4
 1022 0700 24       		.uleb128 0x24
 1023 0701 32000000 		.4byte	.LVL9
 1024 0705 BD070000 		.4byte	0x7bd
 1025 0709 00       		.byte	0
 1026 070a 00       		.byte	0
 1027 070b 00       		.byte	0
 1028 070c 1F       		.uleb128 0x1f
 1029 070d EF050000 		.4byte	0x5ef
 1030 0711 42000000 		.4byte	.LBB18
 1031 0715 16000000 		.4byte	.LBE18-.LBB18
 1032 0719 01       		.byte	0x1
 1033 071a 45       		.byte	0x45
 1034 071b 38070000 		.4byte	0x738
 1035 071f 20       		.uleb128 0x20
 1036 0720 00060000 		.4byte	0x600
 1037 0724 21       		.uleb128 0x21
 1038 0725 42000000 		.4byte	.LBB19
 1039 0729 16000000 		.4byte	.LBE19-.LBB19
 1040 072d 23       		.uleb128 0x23
 1041 072e 0C060000 		.4byte	0x60c
 1042 0732 AF000000 		.4byte	.LLST5
 1043 0736 00       		.byte	0
 1044 0737 00       		.byte	0
 1045 0738 25       		.uleb128 0x25
 1046 0739 60000000 		.4byte	.LVL17
 1047 073d C9070000 		.4byte	0x7c9
 1048 0741 4F070000 		.4byte	0x74f
 1049 0745 26       		.uleb128 0x26
 1050 0746 01       		.uleb128 0x1
 1051 0747 50       		.byte	0x50
 1052 0748 05       		.uleb128 0x5
 1053 0749 03       		.byte	0x3
 1054 074a 00000000 		.4byte	.LC0
 1055 074e 00       		.byte	0
 1056 074f 27       		.uleb128 0x27
 1057 0750 66000000 		.4byte	.LVL18
 1058 0754 D4070000 		.4byte	0x7d4
 1059 0758 26       		.uleb128 0x26
 1060 0759 01       		.uleb128 0x1
 1061 075a 50       		.byte	0x50
 1062 075b 01       		.uleb128 0x1
 1063 075c 32       		.byte	0x32
 1064 075d 00       		.byte	0
 1065 075e 00       		.byte	0
 1066 075f 28       		.uleb128 0x28
 1067 0760 8A070000 		.4byte	.LASF105
 1068 0764 0F       		.byte	0xf
 1069 0765 40       		.byte	0x40
 1070 0766 EA000000 		.4byte	0xea
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 33


 1071 076a 28       		.uleb128 0x28
 1072 076b 0A020000 		.4byte	.LASF106
 1073 076f 0F       		.byte	0xf
 1074 0770 47       		.byte	0x47
 1075 0771 F5000000 		.4byte	0xf5
 1076 0775 28       		.uleb128 0x28
 1077 0776 80050000 		.4byte	.LASF107
 1078 077a 0F       		.byte	0xf
 1079 077b 4A       		.byte	0x4a
 1080 077c EA000000 		.4byte	0xea
 1081 0780 28       		.uleb128 0x28
 1082 0781 19040000 		.4byte	.LASF108
 1083 0785 10       		.byte	0x10
 1084 0786 48       		.byte	0x48
 1085 0787 00010000 		.4byte	0x100
 1086 078b 28       		.uleb128 0x28
 1087 078c 9A000000 		.4byte	.LASF109
 1088 0790 11       		.byte	0x11
 1089 0791 44       		.byte	0x44
 1090 0792 EA000000 		.4byte	0xea
 1091 0796 29       		.uleb128 0x29
 1092 0797 DF060000 		.4byte	.LASF110
 1093 079b 12       		.byte	0x12
 1094 079c 1207     		.2byte	0x712
 1095 079e A2070000 		.4byte	0x7a2
 1096 07a2 2A       		.uleb128 0x2a
 1097 07a3 97000000 		.4byte	0x97
 1098 07a7 28       		.uleb128 0x28
 1099 07a8 D3010000 		.4byte	.LASF111
 1100 07ac 13       		.byte	0x13
 1101 07ad 39       		.byte	0x39
 1102 07ae C6030000 		.4byte	0x3c6
 1103 07b2 28       		.uleb128 0x28
 1104 07b3 0F060000 		.4byte	.LASF112
 1105 07b7 13       		.byte	0x13
 1106 07b8 48       		.byte	0x48
 1107 07b9 33050000 		.4byte	0x533
 1108 07bd 2B       		.uleb128 0x2b
 1109 07be AA010000 		.4byte	.LASF113
 1110 07c2 AA010000 		.4byte	.LASF113
 1111 07c6 14       		.byte	0x14
 1112 07c7 4A01     		.2byte	0x14a
 1113 07c9 2C       		.uleb128 0x2c
 1114 07ca 3F030000 		.4byte	.LASF114
 1115 07ce 3F030000 		.4byte	.LASF114
 1116 07d2 15       		.byte	0x15
 1117 07d3 8B       		.byte	0x8b
 1118 07d4 2C       		.uleb128 0x2c
 1119 07d5 8F030000 		.4byte	.LASF115
 1120 07d9 8F030000 		.4byte	.LASF115
 1121 07dd 16       		.byte	0x16
 1122 07de 36       		.byte	0x36
 1123 07df 00       		.byte	0
 1124              		.section	.debug_abbrev,"",%progbits
 1125              	.Ldebug_abbrev0:
 1126 0000 01       		.uleb128 0x1
 1127 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 34


 1128 0002 01       		.byte	0x1
 1129 0003 25       		.uleb128 0x25
 1130 0004 0E       		.uleb128 0xe
 1131 0005 13       		.uleb128 0x13
 1132 0006 0B       		.uleb128 0xb
 1133 0007 03       		.uleb128 0x3
 1134 0008 0E       		.uleb128 0xe
 1135 0009 1B       		.uleb128 0x1b
 1136 000a 0E       		.uleb128 0xe
 1137 000b 55       		.uleb128 0x55
 1138 000c 17       		.uleb128 0x17
 1139 000d 11       		.uleb128 0x11
 1140 000e 01       		.uleb128 0x1
 1141 000f 10       		.uleb128 0x10
 1142 0010 17       		.uleb128 0x17
 1143 0011 00       		.byte	0
 1144 0012 00       		.byte	0
 1145 0013 02       		.uleb128 0x2
 1146 0014 24       		.uleb128 0x24
 1147 0015 00       		.byte	0
 1148 0016 0B       		.uleb128 0xb
 1149 0017 0B       		.uleb128 0xb
 1150 0018 3E       		.uleb128 0x3e
 1151 0019 0B       		.uleb128 0xb
 1152 001a 03       		.uleb128 0x3
 1153 001b 0E       		.uleb128 0xe
 1154 001c 00       		.byte	0
 1155 001d 00       		.byte	0
 1156 001e 03       		.uleb128 0x3
 1157 001f 16       		.uleb128 0x16
 1158 0020 00       		.byte	0
 1159 0021 03       		.uleb128 0x3
 1160 0022 0E       		.uleb128 0xe
 1161 0023 3A       		.uleb128 0x3a
 1162 0024 0B       		.uleb128 0xb
 1163 0025 3B       		.uleb128 0x3b
 1164 0026 0B       		.uleb128 0xb
 1165 0027 49       		.uleb128 0x49
 1166 0028 13       		.uleb128 0x13
 1167 0029 00       		.byte	0
 1168 002a 00       		.byte	0
 1169 002b 04       		.uleb128 0x4
 1170 002c 24       		.uleb128 0x24
 1171 002d 00       		.byte	0
 1172 002e 0B       		.uleb128 0xb
 1173 002f 0B       		.uleb128 0xb
 1174 0030 3E       		.uleb128 0x3e
 1175 0031 0B       		.uleb128 0xb
 1176 0032 03       		.uleb128 0x3
 1177 0033 08       		.uleb128 0x8
 1178 0034 00       		.byte	0
 1179 0035 00       		.byte	0
 1180 0036 05       		.uleb128 0x5
 1181 0037 16       		.uleb128 0x16
 1182 0038 00       		.byte	0
 1183 0039 03       		.uleb128 0x3
 1184 003a 0E       		.uleb128 0xe
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 35


 1185 003b 3A       		.uleb128 0x3a
 1186 003c 0B       		.uleb128 0xb
 1187 003d 3B       		.uleb128 0x3b
 1188 003e 05       		.uleb128 0x5
 1189 003f 49       		.uleb128 0x49
 1190 0040 13       		.uleb128 0x13
 1191 0041 00       		.byte	0
 1192 0042 00       		.byte	0
 1193 0043 06       		.uleb128 0x6
 1194 0044 04       		.uleb128 0x4
 1195 0045 01       		.byte	0x1
 1196 0046 0B       		.uleb128 0xb
 1197 0047 0B       		.uleb128 0xb
 1198 0048 49       		.uleb128 0x49
 1199 0049 13       		.uleb128 0x13
 1200 004a 3A       		.uleb128 0x3a
 1201 004b 0B       		.uleb128 0xb
 1202 004c 3B       		.uleb128 0x3b
 1203 004d 0B       		.uleb128 0xb
 1204 004e 01       		.uleb128 0x1
 1205 004f 13       		.uleb128 0x13
 1206 0050 00       		.byte	0
 1207 0051 00       		.byte	0
 1208 0052 07       		.uleb128 0x7
 1209 0053 28       		.uleb128 0x28
 1210 0054 00       		.byte	0
 1211 0055 03       		.uleb128 0x3
 1212 0056 0E       		.uleb128 0xe
 1213 0057 1C       		.uleb128 0x1c
 1214 0058 0B       		.uleb128 0xb
 1215 0059 00       		.byte	0
 1216 005a 00       		.byte	0
 1217 005b 08       		.uleb128 0x8
 1218 005c 28       		.uleb128 0x28
 1219 005d 00       		.byte	0
 1220 005e 03       		.uleb128 0x3
 1221 005f 0E       		.uleb128 0xe
 1222 0060 1C       		.uleb128 0x1c
 1223 0061 0D       		.uleb128 0xd
 1224 0062 00       		.byte	0
 1225 0063 00       		.byte	0
 1226 0064 09       		.uleb128 0x9
 1227 0065 01       		.uleb128 0x1
 1228 0066 01       		.byte	0x1
 1229 0067 49       		.uleb128 0x49
 1230 0068 13       		.uleb128 0x13
 1231 0069 01       		.uleb128 0x1
 1232 006a 13       		.uleb128 0x13
 1233 006b 00       		.byte	0
 1234 006c 00       		.byte	0
 1235 006d 0A       		.uleb128 0xa
 1236 006e 21       		.uleb128 0x21
 1237 006f 00       		.byte	0
 1238 0070 00       		.byte	0
 1239 0071 00       		.byte	0
 1240 0072 0B       		.uleb128 0xb
 1241 0073 26       		.uleb128 0x26
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 36


 1242 0074 00       		.byte	0
 1243 0075 49       		.uleb128 0x49
 1244 0076 13       		.uleb128 0x13
 1245 0077 00       		.byte	0
 1246 0078 00       		.byte	0
 1247 0079 0C       		.uleb128 0xc
 1248 007a 0F       		.uleb128 0xf
 1249 007b 00       		.byte	0
 1250 007c 0B       		.uleb128 0xb
 1251 007d 0B       		.uleb128 0xb
 1252 007e 49       		.uleb128 0x49
 1253 007f 13       		.uleb128 0x13
 1254 0080 00       		.byte	0
 1255 0081 00       		.byte	0
 1256 0082 0D       		.uleb128 0xd
 1257 0083 13       		.uleb128 0x13
 1258 0084 01       		.byte	0x1
 1259 0085 0B       		.uleb128 0xb
 1260 0086 0B       		.uleb128 0xb
 1261 0087 3A       		.uleb128 0x3a
 1262 0088 0B       		.uleb128 0xb
 1263 0089 3B       		.uleb128 0x3b
 1264 008a 0B       		.uleb128 0xb
 1265 008b 01       		.uleb128 0x1
 1266 008c 13       		.uleb128 0x13
 1267 008d 00       		.byte	0
 1268 008e 00       		.byte	0
 1269 008f 0E       		.uleb128 0xe
 1270 0090 0D       		.uleb128 0xd
 1271 0091 00       		.byte	0
 1272 0092 03       		.uleb128 0x3
 1273 0093 0E       		.uleb128 0xe
 1274 0094 3A       		.uleb128 0x3a
 1275 0095 0B       		.uleb128 0xb
 1276 0096 3B       		.uleb128 0x3b
 1277 0097 0B       		.uleb128 0xb
 1278 0098 49       		.uleb128 0x49
 1279 0099 13       		.uleb128 0x13
 1280 009a 38       		.uleb128 0x38
 1281 009b 0B       		.uleb128 0xb
 1282 009c 00       		.byte	0
 1283 009d 00       		.byte	0
 1284 009e 0F       		.uleb128 0xf
 1285 009f 15       		.uleb128 0x15
 1286 00a0 01       		.byte	0x1
 1287 00a1 27       		.uleb128 0x27
 1288 00a2 19       		.uleb128 0x19
 1289 00a3 49       		.uleb128 0x49
 1290 00a4 13       		.uleb128 0x13
 1291 00a5 01       		.uleb128 0x1
 1292 00a6 13       		.uleb128 0x13
 1293 00a7 00       		.byte	0
 1294 00a8 00       		.byte	0
 1295 00a9 10       		.uleb128 0x10
 1296 00aa 05       		.uleb128 0x5
 1297 00ab 00       		.byte	0
 1298 00ac 49       		.uleb128 0x49
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 37


 1299 00ad 13       		.uleb128 0x13
 1300 00ae 00       		.byte	0
 1301 00af 00       		.byte	0
 1302 00b0 11       		.uleb128 0x11
 1303 00b1 13       		.uleb128 0x13
 1304 00b2 01       		.byte	0x1
 1305 00b3 03       		.uleb128 0x3
 1306 00b4 0E       		.uleb128 0xe
 1307 00b5 0B       		.uleb128 0xb
 1308 00b6 0B       		.uleb128 0xb
 1309 00b7 3A       		.uleb128 0x3a
 1310 00b8 0B       		.uleb128 0xb
 1311 00b9 3B       		.uleb128 0x3b
 1312 00ba 0B       		.uleb128 0xb
 1313 00bb 01       		.uleb128 0x1
 1314 00bc 13       		.uleb128 0x13
 1315 00bd 00       		.byte	0
 1316 00be 00       		.byte	0
 1317 00bf 12       		.uleb128 0x12
 1318 00c0 0D       		.uleb128 0xd
 1319 00c1 00       		.byte	0
 1320 00c2 03       		.uleb128 0x3
 1321 00c3 08       		.uleb128 0x8
 1322 00c4 3A       		.uleb128 0x3a
 1323 00c5 0B       		.uleb128 0xb
 1324 00c6 3B       		.uleb128 0x3b
 1325 00c7 0B       		.uleb128 0xb
 1326 00c8 49       		.uleb128 0x49
 1327 00c9 13       		.uleb128 0x13
 1328 00ca 38       		.uleb128 0x38
 1329 00cb 0B       		.uleb128 0xb
 1330 00cc 00       		.byte	0
 1331 00cd 00       		.byte	0
 1332 00ce 13       		.uleb128 0x13
 1333 00cf 2E       		.uleb128 0x2e
 1334 00d0 01       		.byte	0x1
 1335 00d1 3F       		.uleb128 0x3f
 1336 00d2 19       		.uleb128 0x19
 1337 00d3 03       		.uleb128 0x3
 1338 00d4 0E       		.uleb128 0xe
 1339 00d5 3A       		.uleb128 0x3a
 1340 00d6 0B       		.uleb128 0xb
 1341 00d7 3B       		.uleb128 0x3b
 1342 00d8 0B       		.uleb128 0xb
 1343 00d9 27       		.uleb128 0x27
 1344 00da 19       		.uleb128 0x19
 1345 00db 49       		.uleb128 0x49
 1346 00dc 13       		.uleb128 0x13
 1347 00dd 20       		.uleb128 0x20
 1348 00de 0B       		.uleb128 0xb
 1349 00df 01       		.uleb128 0x1
 1350 00e0 13       		.uleb128 0x13
 1351 00e1 00       		.byte	0
 1352 00e2 00       		.byte	0
 1353 00e3 14       		.uleb128 0x14
 1354 00e4 05       		.uleb128 0x5
 1355 00e5 00       		.byte	0
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 38


 1356 00e6 03       		.uleb128 0x3
 1357 00e7 0E       		.uleb128 0xe
 1358 00e8 3A       		.uleb128 0x3a
 1359 00e9 0B       		.uleb128 0xb
 1360 00ea 3B       		.uleb128 0x3b
 1361 00eb 0B       		.uleb128 0xb
 1362 00ec 49       		.uleb128 0x49
 1363 00ed 13       		.uleb128 0x13
 1364 00ee 00       		.byte	0
 1365 00ef 00       		.byte	0
 1366 00f0 15       		.uleb128 0x15
 1367 00f1 2E       		.uleb128 0x2e
 1368 00f2 01       		.byte	0x1
 1369 00f3 3F       		.uleb128 0x3f
 1370 00f4 19       		.uleb128 0x19
 1371 00f5 03       		.uleb128 0x3
 1372 00f6 0E       		.uleb128 0xe
 1373 00f7 3A       		.uleb128 0x3a
 1374 00f8 0B       		.uleb128 0xb
 1375 00f9 3B       		.uleb128 0x3b
 1376 00fa 05       		.uleb128 0x5
 1377 00fb 27       		.uleb128 0x27
 1378 00fc 19       		.uleb128 0x19
 1379 00fd 49       		.uleb128 0x49
 1380 00fe 13       		.uleb128 0x13
 1381 00ff 20       		.uleb128 0x20
 1382 0100 0B       		.uleb128 0xb
 1383 0101 01       		.uleb128 0x1
 1384 0102 13       		.uleb128 0x13
 1385 0103 00       		.byte	0
 1386 0104 00       		.byte	0
 1387 0105 16       		.uleb128 0x16
 1388 0106 05       		.uleb128 0x5
 1389 0107 00       		.byte	0
 1390 0108 03       		.uleb128 0x3
 1391 0109 0E       		.uleb128 0xe
 1392 010a 3A       		.uleb128 0x3a
 1393 010b 0B       		.uleb128 0xb
 1394 010c 3B       		.uleb128 0x3b
 1395 010d 05       		.uleb128 0x5
 1396 010e 49       		.uleb128 0x49
 1397 010f 13       		.uleb128 0x13
 1398 0110 00       		.byte	0
 1399 0111 00       		.byte	0
 1400 0112 17       		.uleb128 0x17
 1401 0113 34       		.uleb128 0x34
 1402 0114 00       		.byte	0
 1403 0115 03       		.uleb128 0x3
 1404 0116 08       		.uleb128 0x8
 1405 0117 3A       		.uleb128 0x3a
 1406 0118 0B       		.uleb128 0xb
 1407 0119 3B       		.uleb128 0x3b
 1408 011a 05       		.uleb128 0x5
 1409 011b 49       		.uleb128 0x49
 1410 011c 13       		.uleb128 0x13
 1411 011d 00       		.byte	0
 1412 011e 00       		.byte	0
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 39


 1413 011f 18       		.uleb128 0x18
 1414 0120 34       		.uleb128 0x34
 1415 0121 00       		.byte	0
 1416 0122 03       		.uleb128 0x3
 1417 0123 0E       		.uleb128 0xe
 1418 0124 3A       		.uleb128 0x3a
 1419 0125 0B       		.uleb128 0xb
 1420 0126 3B       		.uleb128 0x3b
 1421 0127 05       		.uleb128 0x5
 1422 0128 49       		.uleb128 0x49
 1423 0129 13       		.uleb128 0x13
 1424 012a 00       		.byte	0
 1425 012b 00       		.byte	0
 1426 012c 19       		.uleb128 0x19
 1427 012d 0B       		.uleb128 0xb
 1428 012e 01       		.byte	0x1
 1429 012f 00       		.byte	0
 1430 0130 00       		.byte	0
 1431 0131 1A       		.uleb128 0x1a
 1432 0132 2E       		.uleb128 0x2e
 1433 0133 01       		.byte	0x1
 1434 0134 3F       		.uleb128 0x3f
 1435 0135 19       		.uleb128 0x19
 1436 0136 03       		.uleb128 0x3
 1437 0137 0E       		.uleb128 0xe
 1438 0138 3A       		.uleb128 0x3a
 1439 0139 0B       		.uleb128 0xb
 1440 013a 3B       		.uleb128 0x3b
 1441 013b 0B       		.uleb128 0xb
 1442 013c 27       		.uleb128 0x27
 1443 013d 19       		.uleb128 0x19
 1444 013e 11       		.uleb128 0x11
 1445 013f 01       		.uleb128 0x1
 1446 0140 12       		.uleb128 0x12
 1447 0141 06       		.uleb128 0x6
 1448 0142 40       		.uleb128 0x40
 1449 0143 18       		.uleb128 0x18
 1450 0144 9642     		.uleb128 0x2116
 1451 0146 19       		.uleb128 0x19
 1452 0147 01       		.uleb128 0x1
 1453 0148 13       		.uleb128 0x13
 1454 0149 00       		.byte	0
 1455 014a 00       		.byte	0
 1456 014b 1B       		.uleb128 0x1b
 1457 014c 05       		.uleb128 0x5
 1458 014d 00       		.byte	0
 1459 014e 03       		.uleb128 0x3
 1460 014f 08       		.uleb128 0x8
 1461 0150 3A       		.uleb128 0x3a
 1462 0151 0B       		.uleb128 0xb
 1463 0152 3B       		.uleb128 0x3b
 1464 0153 0B       		.uleb128 0xb
 1465 0154 49       		.uleb128 0x49
 1466 0155 13       		.uleb128 0x13
 1467 0156 02       		.uleb128 0x2
 1468 0157 17       		.uleb128 0x17
 1469 0158 00       		.byte	0
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 40


 1470 0159 00       		.byte	0
 1471 015a 1C       		.uleb128 0x1c
 1472 015b 34       		.uleb128 0x34
 1473 015c 00       		.byte	0
 1474 015d 03       		.uleb128 0x3
 1475 015e 0E       		.uleb128 0xe
 1476 015f 3A       		.uleb128 0x3a
 1477 0160 0B       		.uleb128 0xb
 1478 0161 3B       		.uleb128 0x3b
 1479 0162 0B       		.uleb128 0xb
 1480 0163 49       		.uleb128 0x49
 1481 0164 13       		.uleb128 0x13
 1482 0165 00       		.byte	0
 1483 0166 00       		.byte	0
 1484 0167 1D       		.uleb128 0x1d
 1485 0168 34       		.uleb128 0x34
 1486 0169 00       		.byte	0
 1487 016a 03       		.uleb128 0x3
 1488 016b 0E       		.uleb128 0xe
 1489 016c 3A       		.uleb128 0x3a
 1490 016d 0B       		.uleb128 0xb
 1491 016e 3B       		.uleb128 0x3b
 1492 016f 0B       		.uleb128 0xb
 1493 0170 49       		.uleb128 0x49
 1494 0171 13       		.uleb128 0x13
 1495 0172 02       		.uleb128 0x2
 1496 0173 17       		.uleb128 0x17
 1497 0174 00       		.byte	0
 1498 0175 00       		.byte	0
 1499 0176 1E       		.uleb128 0x1e
 1500 0177 34       		.uleb128 0x34
 1501 0178 00       		.byte	0
 1502 0179 03       		.uleb128 0x3
 1503 017a 0E       		.uleb128 0xe
 1504 017b 3A       		.uleb128 0x3a
 1505 017c 0B       		.uleb128 0xb
 1506 017d 3B       		.uleb128 0x3b
 1507 017e 0B       		.uleb128 0xb
 1508 017f 49       		.uleb128 0x49
 1509 0180 13       		.uleb128 0x13
 1510 0181 02       		.uleb128 0x2
 1511 0182 18       		.uleb128 0x18
 1512 0183 00       		.byte	0
 1513 0184 00       		.byte	0
 1514 0185 1F       		.uleb128 0x1f
 1515 0186 1D       		.uleb128 0x1d
 1516 0187 01       		.byte	0x1
 1517 0188 31       		.uleb128 0x31
 1518 0189 13       		.uleb128 0x13
 1519 018a 11       		.uleb128 0x11
 1520 018b 01       		.uleb128 0x1
 1521 018c 12       		.uleb128 0x12
 1522 018d 06       		.uleb128 0x6
 1523 018e 58       		.uleb128 0x58
 1524 018f 0B       		.uleb128 0xb
 1525 0190 59       		.uleb128 0x59
 1526 0191 0B       		.uleb128 0xb
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 41


 1527 0192 01       		.uleb128 0x1
 1528 0193 13       		.uleb128 0x13
 1529 0194 00       		.byte	0
 1530 0195 00       		.byte	0
 1531 0196 20       		.uleb128 0x20
 1532 0197 05       		.uleb128 0x5
 1533 0198 00       		.byte	0
 1534 0199 31       		.uleb128 0x31
 1535 019a 13       		.uleb128 0x13
 1536 019b 00       		.byte	0
 1537 019c 00       		.byte	0
 1538 019d 21       		.uleb128 0x21
 1539 019e 0B       		.uleb128 0xb
 1540 019f 01       		.byte	0x1
 1541 01a0 11       		.uleb128 0x11
 1542 01a1 01       		.uleb128 0x1
 1543 01a2 12       		.uleb128 0x12
 1544 01a3 06       		.uleb128 0x6
 1545 01a4 00       		.byte	0
 1546 01a5 00       		.byte	0
 1547 01a6 22       		.uleb128 0x22
 1548 01a7 34       		.uleb128 0x34
 1549 01a8 00       		.byte	0
 1550 01a9 31       		.uleb128 0x31
 1551 01aa 13       		.uleb128 0x13
 1552 01ab 1C       		.uleb128 0x1c
 1553 01ac 0B       		.uleb128 0xb
 1554 01ad 00       		.byte	0
 1555 01ae 00       		.byte	0
 1556 01af 23       		.uleb128 0x23
 1557 01b0 34       		.uleb128 0x34
 1558 01b1 00       		.byte	0
 1559 01b2 31       		.uleb128 0x31
 1560 01b3 13       		.uleb128 0x13
 1561 01b4 02       		.uleb128 0x2
 1562 01b5 17       		.uleb128 0x17
 1563 01b6 00       		.byte	0
 1564 01b7 00       		.byte	0
 1565 01b8 24       		.uleb128 0x24
 1566 01b9 898201   		.uleb128 0x4109
 1567 01bc 00       		.byte	0
 1568 01bd 11       		.uleb128 0x11
 1569 01be 01       		.uleb128 0x1
 1570 01bf 31       		.uleb128 0x31
 1571 01c0 13       		.uleb128 0x13
 1572 01c1 00       		.byte	0
 1573 01c2 00       		.byte	0
 1574 01c3 25       		.uleb128 0x25
 1575 01c4 898201   		.uleb128 0x4109
 1576 01c7 01       		.byte	0x1
 1577 01c8 11       		.uleb128 0x11
 1578 01c9 01       		.uleb128 0x1
 1579 01ca 31       		.uleb128 0x31
 1580 01cb 13       		.uleb128 0x13
 1581 01cc 01       		.uleb128 0x1
 1582 01cd 13       		.uleb128 0x13
 1583 01ce 00       		.byte	0
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 42


 1584 01cf 00       		.byte	0
 1585 01d0 26       		.uleb128 0x26
 1586 01d1 8A8201   		.uleb128 0x410a
 1587 01d4 00       		.byte	0
 1588 01d5 02       		.uleb128 0x2
 1589 01d6 18       		.uleb128 0x18
 1590 01d7 9142     		.uleb128 0x2111
 1591 01d9 18       		.uleb128 0x18
 1592 01da 00       		.byte	0
 1593 01db 00       		.byte	0
 1594 01dc 27       		.uleb128 0x27
 1595 01dd 898201   		.uleb128 0x4109
 1596 01e0 01       		.byte	0x1
 1597 01e1 11       		.uleb128 0x11
 1598 01e2 01       		.uleb128 0x1
 1599 01e3 31       		.uleb128 0x31
 1600 01e4 13       		.uleb128 0x13
 1601 01e5 00       		.byte	0
 1602 01e6 00       		.byte	0
 1603 01e7 28       		.uleb128 0x28
 1604 01e8 34       		.uleb128 0x34
 1605 01e9 00       		.byte	0
 1606 01ea 03       		.uleb128 0x3
 1607 01eb 0E       		.uleb128 0xe
 1608 01ec 3A       		.uleb128 0x3a
 1609 01ed 0B       		.uleb128 0xb
 1610 01ee 3B       		.uleb128 0x3b
 1611 01ef 0B       		.uleb128 0xb
 1612 01f0 49       		.uleb128 0x49
 1613 01f1 13       		.uleb128 0x13
 1614 01f2 3F       		.uleb128 0x3f
 1615 01f3 19       		.uleb128 0x19
 1616 01f4 3C       		.uleb128 0x3c
 1617 01f5 19       		.uleb128 0x19
 1618 01f6 00       		.byte	0
 1619 01f7 00       		.byte	0
 1620 01f8 29       		.uleb128 0x29
 1621 01f9 34       		.uleb128 0x34
 1622 01fa 00       		.byte	0
 1623 01fb 03       		.uleb128 0x3
 1624 01fc 0E       		.uleb128 0xe
 1625 01fd 3A       		.uleb128 0x3a
 1626 01fe 0B       		.uleb128 0xb
 1627 01ff 3B       		.uleb128 0x3b
 1628 0200 05       		.uleb128 0x5
 1629 0201 49       		.uleb128 0x49
 1630 0202 13       		.uleb128 0x13
 1631 0203 3F       		.uleb128 0x3f
 1632 0204 19       		.uleb128 0x19
 1633 0205 3C       		.uleb128 0x3c
 1634 0206 19       		.uleb128 0x19
 1635 0207 00       		.byte	0
 1636 0208 00       		.byte	0
 1637 0209 2A       		.uleb128 0x2a
 1638 020a 35       		.uleb128 0x35
 1639 020b 00       		.byte	0
 1640 020c 49       		.uleb128 0x49
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 43


 1641 020d 13       		.uleb128 0x13
 1642 020e 00       		.byte	0
 1643 020f 00       		.byte	0
 1644 0210 2B       		.uleb128 0x2b
 1645 0211 2E       		.uleb128 0x2e
 1646 0212 00       		.byte	0
 1647 0213 3F       		.uleb128 0x3f
 1648 0214 19       		.uleb128 0x19
 1649 0215 3C       		.uleb128 0x3c
 1650 0216 19       		.uleb128 0x19
 1651 0217 6E       		.uleb128 0x6e
 1652 0218 0E       		.uleb128 0xe
 1653 0219 03       		.uleb128 0x3
 1654 021a 0E       		.uleb128 0xe
 1655 021b 3A       		.uleb128 0x3a
 1656 021c 0B       		.uleb128 0xb
 1657 021d 3B       		.uleb128 0x3b
 1658 021e 05       		.uleb128 0x5
 1659 021f 00       		.byte	0
 1660 0220 00       		.byte	0
 1661 0221 2C       		.uleb128 0x2c
 1662 0222 2E       		.uleb128 0x2e
 1663 0223 00       		.byte	0
 1664 0224 3F       		.uleb128 0x3f
 1665 0225 19       		.uleb128 0x19
 1666 0226 3C       		.uleb128 0x3c
 1667 0227 19       		.uleb128 0x19
 1668 0228 6E       		.uleb128 0x6e
 1669 0229 0E       		.uleb128 0xe
 1670 022a 03       		.uleb128 0x3
 1671 022b 0E       		.uleb128 0xe
 1672 022c 3A       		.uleb128 0x3a
 1673 022d 0B       		.uleb128 0xb
 1674 022e 3B       		.uleb128 0x3b
 1675 022f 0B       		.uleb128 0xb
 1676 0230 00       		.byte	0
 1677 0231 00       		.byte	0
 1678 0232 00       		.byte	0
 1679              		.section	.debug_loc,"",%progbits
 1680              	.Ldebug_loc0:
 1681              	.LLST0:
 1682 0000 00000000 		.4byte	.LVL0
 1683 0004 28000000 		.4byte	.LVL8
 1684 0008 0100     		.2byte	0x1
 1685 000a 50       		.byte	0x50
 1686 000b 28000000 		.4byte	.LVL8
 1687 000f 36000000 		.4byte	.LVL11
 1688 0013 0400     		.2byte	0x4
 1689 0015 F3       		.byte	0xf3
 1690 0016 01       		.uleb128 0x1
 1691 0017 50       		.byte	0x50
 1692 0018 9F       		.byte	0x9f
 1693 0019 36000000 		.4byte	.LVL11
 1694 001d 38000000 		.4byte	.LVL12
 1695 0021 0100     		.2byte	0x1
 1696 0023 50       		.byte	0x50
 1697 0024 38000000 		.4byte	.LVL12
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 44


 1698 0028 74000000 		.4byte	.LFE155
 1699 002c 0400     		.2byte	0x4
 1700 002e F3       		.byte	0xf3
 1701 002f 01       		.uleb128 0x1
 1702 0030 50       		.byte	0x50
 1703 0031 9F       		.byte	0x9f
 1704 0032 00000000 		.4byte	0
 1705 0036 00000000 		.4byte	0
 1706              	.LLST1:
 1707 003a 14000000 		.4byte	.LVL5
 1708 003e 18000000 		.4byte	.LVL6
 1709 0042 0100     		.2byte	0x1
 1710 0044 52       		.byte	0x52
 1711 0045 00000000 		.4byte	0
 1712 0049 00000000 		.4byte	0
 1713              	.LLST2:
 1714 004d 10000000 		.4byte	.LVL4
 1715 0051 28000000 		.4byte	.LVL8
 1716 0055 0200     		.2byte	0x2
 1717 0057 30       		.byte	0x30
 1718 0058 9F       		.byte	0x9f
 1719 0059 28000000 		.4byte	.LVL8
 1720 005d 36000000 		.4byte	.LVL11
 1721 0061 0100     		.2byte	0x1
 1722 0063 54       		.byte	0x54
 1723 0064 36000000 		.4byte	.LVL11
 1724 0068 38000000 		.4byte	.LVL12
 1725 006c 0200     		.2byte	0x2
 1726 006e 30       		.byte	0x30
 1727 006f 9F       		.byte	0x9f
 1728 0070 38000000 		.4byte	.LVL12
 1729 0074 42000000 		.4byte	.LVL13
 1730 0078 0100     		.2byte	0x1
 1731 007a 54       		.byte	0x54
 1732 007b 00000000 		.4byte	0
 1733 007f 00000000 		.4byte	0
 1734              	.LLST3:
 1735 0083 20000000 		.4byte	.LVL7
 1736 0087 42000000 		.4byte	.LVL13
 1737 008b 0100     		.2byte	0x1
 1738 008d 55       		.byte	0x55
 1739 008e 00000000 		.4byte	0
 1740 0092 00000000 		.4byte	0
 1741              	.LLST4:
 1742 0096 28000000 		.4byte	.LVL8
 1743 009a 31000000 		.4byte	.LVL9-1
 1744 009e 0700     		.2byte	0x7
 1745 00a0 74       		.byte	0x74
 1746 00a1 00       		.sleb128 0
 1747 00a2 32       		.byte	0x32
 1748 00a3 24       		.byte	0x24
 1749 00a4 75       		.byte	0x75
 1750 00a5 00       		.sleb128 0
 1751 00a6 22       		.byte	0x22
 1752 00a7 00000000 		.4byte	0
 1753 00ab 00000000 		.4byte	0
 1754              	.LLST5:
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 45


 1755 00af 42000000 		.4byte	.LVL13
 1756 00b3 52000000 		.4byte	.LVL14
 1757 00b7 0300     		.2byte	0x3
 1758 00b9 09       		.byte	0x9
 1759 00ba FF       		.byte	0xff
 1760 00bb 9F       		.byte	0x9f
 1761 00bc 52000000 		.4byte	.LVL14
 1762 00c0 54000000 		.4byte	.LVL15
 1763 00c4 0100     		.2byte	0x1
 1764 00c6 50       		.byte	0x50
 1765 00c7 54000000 		.4byte	.LVL15
 1766 00cb 58000000 		.4byte	.LVL16
 1767 00cf 0300     		.2byte	0x3
 1768 00d1 09       		.byte	0x9
 1769 00d2 FF       		.byte	0xff
 1770 00d3 9F       		.byte	0x9f
 1771 00d4 00000000 		.4byte	0
 1772 00d8 00000000 		.4byte	0
 1773              		.section	.debug_aranges,"",%progbits
 1774 0000 1C000000 		.4byte	0x1c
 1775 0004 0200     		.2byte	0x2
 1776 0006 00000000 		.4byte	.Ldebug_info0
 1777 000a 04       		.byte	0x4
 1778 000b 00       		.byte	0
 1779 000c 0000     		.2byte	0
 1780 000e 0000     		.2byte	0
 1781 0010 00000000 		.4byte	.LFB155
 1782 0014 74000000 		.4byte	.LFE155-.LFB155
 1783 0018 00000000 		.4byte	0
 1784 001c 00000000 		.4byte	0
 1785              		.section	.debug_ranges,"",%progbits
 1786              	.Ldebug_ranges0:
 1787 0000 00000000 		.4byte	.LFB155
 1788 0004 74000000 		.4byte	.LFE155
 1789 0008 00000000 		.4byte	0
 1790 000c 00000000 		.4byte	0
 1791              		.section	.debug_line,"",%progbits
 1792              	.Ldebug_line0:
 1793 0000 B4030000 		.section	.debug_str,"MS",%progbits,1
 1793      02007103 
 1793      00000201 
 1793      FB0E0D00 
 1793      01010101 
 1794              	.LASF77:
 1795 0000 7265736F 		.ascii	"resource\000"
 1795      75726365 
 1795      00
 1796              	.LASF85:
 1797 0009 656E6769 		.ascii	"engineLightValue\000"
 1797      6E654C69 
 1797      67687456 
 1797      616C7565 
 1797      00
 1798              	.LASF74:
 1799 001a 6F6E4572 		.ascii	"onErrorTaskCount\000"
 1799      726F7254 
 1799      61736B43 
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 46


 1799      6F756E74 
 1799      00
 1800              	.LASF22:
 1801 002b 45455F55 		.ascii	"EE_UREG\000"
 1801      52454700 
 1802              	.LASF29:
 1803 0033 52435F53 		.ascii	"RC_SUCCESS\000"
 1803      55434345 
 1803      535300
 1804              	.LASF66:
 1805 003e 53435F53 		.ascii	"SC_SPEED_driverOut_t\000"
 1805      50454544 
 1805      5F647269 
 1805      7665724F 
 1805      75745F74 
 1806              	.LASF71:
 1807 0053 65764F6E 		.ascii	"evOnError\000"
 1807      4572726F 
 1807      7200
 1808              	.LASF26:
 1809 005d 4576656E 		.ascii	"EventMaskType\000"
 1809      744D6173 
 1809      6B547970 
 1809      6500
 1810              	.LASF2:
 1811 006b 73686F72 		.ascii	"short int\000"
 1811      7420696E 
 1811      7400
 1812              	.LASF18:
 1813 0075 73697A65 		.ascii	"size_t\000"
 1813      5F7400
 1814              	.LASF47:
 1815 007c 52435F45 		.ascii	"RC_ERROR_WRITE_FAILS\000"
 1815      52524F52 
 1815      5F575249 
 1815      54455F46 
 1815      41494C53 
 1816              	.LASF27:
 1817 0091 73697A65 		.ascii	"sizetype\000"
 1817      74797065 
 1817      00
 1818              	.LASF109:
 1819 009a 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1819      52515F6E 
 1819      65737469 
 1819      6E675F6C 
 1819      6576656C 
 1820              	.LASF99:
 1821 00af 7461736B 		.ascii	"task\000"
 1821      00
 1822              	.LASF94:
 1823 00b4 5254455F 		.ascii	"RTE_SC_SPEED_get\000"
 1823      53435F53 
 1823      50454544 
 1823      5F676574 
 1823      00
 1824              	.LASF80:
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 47


 1825 00c5 53435F53 		.ascii	"SC_SPEED_s\000"
 1825      50454544 
 1825      5F7300
 1826              	.LASF84:
 1827 00d0 53435F53 		.ascii	"SC_SPEED_t\000"
 1827      50454544 
 1827      5F7400
 1828              	.LASF46:
 1829 00db 52435F45 		.ascii	"RC_ERROR_READ_FAILS\000"
 1829      52524F52 
 1829      5F524541 
 1829      445F4641 
 1829      494C5300 
 1830              	.LASF7:
 1831 00ef 5F5F7569 		.ascii	"__uint32_t\000"
 1831      6E743332 
 1831      5F7400
 1832              	.LASF23:
 1833 00fa 45455F46 		.ascii	"EE_FREG\000"
 1833      52454700 
 1834              	.LASF21:
 1835 0102 45455F55 		.ascii	"EE_UINT32\000"
 1835      494E5433 
 1835      3200
 1836              	.LASF24:
 1837 010c 45455F54 		.ascii	"EE_TID\000"
 1837      494400
 1838              	.LASF67:
 1839 0113 73706565 		.ascii	"speedValue\000"
 1839      6456616C 
 1839      756500
 1840              	.LASF81:
 1841 011e 76616C75 		.ascii	"value\000"
 1841      6500
 1842              	.LASF91:
 1843 0124 53435F45 		.ascii	"SC_ENGINE_s\000"
 1843      4E47494E 
 1843      455F7300 
 1844              	.LASF64:
 1845 0130 53435F53 		.ascii	"SC_SPEED_data_t\000"
 1845      50454544 
 1845      5F646174 
 1845      615F7400 
 1846              	.LASF52:
 1847 0140 52435F45 		.ascii	"RC_ERROR_INVALID_STATE\000"
 1847      52524F52 
 1847      5F494E56 
 1847      414C4944 
 1847      5F535441 
 1848              	.LASF79:
 1849 0157 53435F53 		.ascii	"SC_SPEED_cfg_s\000"
 1849      50454544 
 1849      5F636667 
 1849      5F7300
 1850              	.LASF78:
 1851 0166 53435F53 		.ascii	"SC_SPEED_cfg_t\000"
 1851      50454544 
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 48


 1851      5F636667 
 1851      5F7400
 1852              	.LASF98:
 1853 0175 70546173 		.ascii	"pTaskArray\000"
 1853      6B417272 
 1853      617900
 1854              	.LASF96:
 1855 0180 5254455F 		.ascii	"RTE_SC_ENGINE_set\000"
 1855      53435F45 
 1855      4E47494E 
 1855      455F7365 
 1855      7400
 1856              	.LASF14:
 1857 0192 75696E74 		.ascii	"uint32_t\000"
 1857      33325F74 
 1857      00
 1858              	.LASF34:
 1859 019b 52435F45 		.ascii	"RC_ERROR_RANGE\000"
 1859      52524F52 
 1859      5F52414E 
 1859      474500
 1860              	.LASF113:
 1861 01aa 45455F6F 		.ascii	"EE_oo_SetEvent\000"
 1861      6F5F5365 
 1861      74457665 
 1861      6E7400
 1862              	.LASF15:
 1863 01b9 666C6F61 		.ascii	"float\000"
 1863      7400
 1864              	.LASF44:
 1865 01bf 52435F45 		.ascii	"RC_ERROR_WRITE_ONLY\000"
 1865      52524F52 
 1865      5F575249 
 1865      54455F4F 
 1865      4E4C5900 
 1866              	.LASF111:
 1867 01d3 534F5F53 		.ascii	"SO_SPEED_signal\000"
 1867      50454544 
 1867      5F736967 
 1867      6E616C00 
 1868              	.LASF54:
 1869 01e3 52435F45 		.ascii	"RC_ERROR_NOT_IMPLEMENTED\000"
 1869      52524F52 
 1869      5F4E4F54 
 1869      5F494D50 
 1869      4C454D45 
 1870              	.LASF9:
 1871 01fc 6C6F6E67 		.ascii	"long long int\000"
 1871      206C6F6E 
 1871      6720696E 
 1871      7400
 1872              	.LASF106:
 1873 020a 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1873      6F5F4952 
 1873      515F7375 
 1873      7370656E 
 1873      645F7374 
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 49


 1874              	.LASF48:
 1875 0223 52435F45 		.ascii	"RC_ERROR_NOT_MATCH\000"
 1875      52524F52 
 1875      5F4E4F54 
 1875      5F4D4154 
 1875      434800
 1876              	.LASF53:
 1877 0236 52435F45 		.ascii	"RC_ERROR_UNKNOWN\000"
 1877      52524F52 
 1877      5F554E4B 
 1877      4E4F574E 
 1877      00
 1878              	.LASF63:
 1879 0247 5254455F 		.ascii	"RTE_signalStatus_t\000"
 1879      7369676E 
 1879      616C5374 
 1879      61747573 
 1879      5F7400
 1880              	.LASF6:
 1881 025a 6C6F6E67 		.ascii	"long int\000"
 1881      20696E74 
 1881      00
 1882              	.LASF36:
 1883 0263 52435F45 		.ascii	"RC_ERROR_UNDERRUN\000"
 1883      52524F52 
 1883      5F554E44 
 1883      45525255 
 1883      4E00
 1884              	.LASF100:
 1885 0275 5254455F 		.ascii	"RTE_SC_ENGINE_pushPort\000"
 1885      53435F45 
 1885      4E47494E 
 1885      455F7075 
 1885      7368506F 
 1886              	.LASF117:
 1887 028c 736F7572 		.ascii	"source\\asw\\swc_engine.c\000"
 1887      63655C61 
 1887      73775C73 
 1887      77635F65 
 1887      6E67696E 
 1888              	.LASF39:
 1889 02a4 52435F45 		.ascii	"RC_ERROR_BUSY\000"
 1889      52524F52 
 1889      5F425553 
 1889      5900
 1890              	.LASF59:
 1891 02b2 5254455F 		.ascii	"RTE_SIGNALSTATUS_STARTUP\000"
 1891      5349474E 
 1891      414C5354 
 1891      41545553 
 1891      5F535441 
 1892              	.LASF4:
 1893 02cb 5F5F7569 		.ascii	"__uint8_t\000"
 1893      6E74385F 
 1893      7400
 1894              	.LASF45:
 1895 02d5 52435F45 		.ascii	"RC_ERROR_INVALID\000"
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 50


 1895      52524F52 
 1895      5F494E56 
 1895      414C4944 
 1895      00
 1896              	.LASF89:
 1897 02e6 53435F45 		.ascii	"SC_ENGINE_cfg_s\000"
 1897      4E47494E 
 1897      455F6366 
 1897      675F7300 
 1898              	.LASF90:
 1899 02f6 53435F45 		.ascii	"SC_ENGINE_cfg_t\000"
 1899      4E47494E 
 1899      455F6366 
 1899      675F7400 
 1900              	.LASF50:
 1901 0306 52435F45 		.ascii	"RC_ERROR_BAD_DATA\000"
 1901      52524F52 
 1901      5F424144 
 1901      5F444154 
 1901      4100
 1902              	.LASF28:
 1903 0318 626F6F6C 		.ascii	"boolean_t\000"
 1903      65616E5F 
 1903      7400
 1904              	.LASF43:
 1905 0322 52435F45 		.ascii	"RC_ERROR_READ_ONLY\000"
 1905      52524F52 
 1905      5F524541 
 1905      445F4F4E 
 1905      4C5900
 1906              	.LASF69:
 1907 0335 6F757444 		.ascii	"outDriver\000"
 1907      72697665 
 1907      7200
 1908              	.LASF114:
 1909 033f 55415254 		.ascii	"UART_LOG_PutString\000"
 1909      5F4C4F47 
 1909      5F507574 
 1909      53747269 
 1909      6E6700
 1910              	.LASF103:
 1911 0352 6D79456E 		.ascii	"myEngine\000"
 1911      67696E65 
 1911      00
 1912              	.LASF19:
 1913 035b 6C6F6E67 		.ascii	"long double\000"
 1913      20646F75 
 1913      626C6500 
 1914              	.LASF30:
 1915 0367 52435F45 		.ascii	"RC_ERROR\000"
 1915      52524F52 
 1915      00
 1916              	.LASF97:
 1917 0370 7461736B 		.ascii	"taskNum\000"
 1917      4E756D00 
 1918              	.LASF25:
 1919 0378 5461736B 		.ascii	"TaskType\000"
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 51


 1919      54797065 
 1919      00
 1920              	.LASF1:
 1921 0381 756E7369 		.ascii	"unsigned char\000"
 1921      676E6564 
 1921      20636861 
 1921      7200
 1922              	.LASF115:
 1923 038f 57445F41 		.ascii	"WD_Alive\000"
 1923      6C697665 
 1923      00
 1924              	.LASF0:
 1925 0398 7369676E 		.ascii	"signed char\000"
 1925      65642063 
 1925      68617200 
 1926              	.LASF10:
 1927 03a4 6C6F6E67 		.ascii	"long long unsigned int\000"
 1927      206C6F6E 
 1927      6720756E 
 1927      7369676E 
 1927      65642069 
 1928              	.LASF119:
 1929 03bb 454E4749 		.ascii	"ENGINE_setEngine_run\000"
 1929      4E455F73 
 1929      6574456E 
 1929      67696E65 
 1929      5F72756E 
 1930              	.LASF11:
 1931 03d0 756E7369 		.ascii	"unsigned int\000"
 1931      676E6564 
 1931      20696E74 
 1931      00
 1932              	.LASF41:
 1933 03dd 52435F45 		.ascii	"RC_ERROR_OPEN\000"
 1933      52524F52 
 1933      5F4F5045 
 1933      4E00
 1934              	.LASF102:
 1935 03eb 72657475 		.ascii	"returnState1\000"
 1935      726E5374 
 1935      61746531 
 1935      00
 1936              	.LASF104:
 1937 03f8 72657475 		.ascii	"returnState2\000"
 1937      726E5374 
 1937      61746532 
 1937      00
 1938              	.LASF101:
 1939 0405 73706565 		.ascii	"speed\000"
 1939      6400
 1940              	.LASF31:
 1941 040b 52435F45 		.ascii	"RC_ERROR_NULL\000"
 1941      52524F52 
 1941      5F4E554C 
 1941      4C00
 1942              	.LASF108:
 1943 0419 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 52


 1943      74645F65 
 1943      6E646379 
 1943      636C655F 
 1943      6E657874 
 1944              	.LASF20:
 1945 0432 45455F49 		.ascii	"EE_INT32\000"
 1945      4E543332 
 1945      00
 1946              	.LASF83:
 1947 043b 70536967 		.ascii	"pSigCfg\000"
 1947      43666700 
 1948              	.LASF70:
 1949 0443 65764F6E 		.ascii	"evOnUpdate\000"
 1949      55706461 
 1949      746500
 1950              	.LASF82:
 1951 044e 73746174 		.ascii	"status\000"
 1951      757300
 1952              	.LASF17:
 1953 0455 63686172 		.ascii	"char\000"
 1953      00
 1954              	.LASF95:
 1955 045a 7369676E 		.ascii	"signal\000"
 1955      616C00
 1956              	.LASF92:
 1957 0461 53435F45 		.ascii	"SC_ENGINE_t\000"
 1957      4E47494E 
 1957      455F7400 
 1958              	.LASF62:
 1959 046d 5254455F 		.ascii	"RTE_SIGNALSTATUS_INVALID\000"
 1959      5349474E 
 1959      414C5354 
 1959      41545553 
 1959      5F494E56 
 1960              	.LASF60:
 1961 0486 5254455F 		.ascii	"RTE_SIGNALSTATUS_INITIALIZED\000"
 1961      5349474E 
 1961      414C5354 
 1961      41545553 
 1961      5F494E49 
 1962              	.LASF13:
 1963 04a3 696E7433 		.ascii	"int32_t\000"
 1963      325F7400 
 1964              	.LASF3:
 1965 04ab 73686F72 		.ascii	"short unsigned int\000"
 1965      7420756E 
 1965      7369676E 
 1965      65642069 
 1965      6E7400
 1966              	.LASF49:
 1967 04be 52435F45 		.ascii	"RC_ERROR_BAD_PARAM\000"
 1967      52524F52 
 1967      5F424144 
 1967      5F504152 
 1967      414D00
 1968              	.LASF75:
 1969 04d1 6F6E4572 		.ascii	"onErrorTasks\000"
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 53


 1969      726F7254 
 1969      61736B73 
 1969      00
 1970              	.LASF72:
 1971 04de 6F6E5570 		.ascii	"onUpdateTaskCount\000"
 1971      64617465 
 1971      5461736B 
 1971      436F756E 
 1971      7400
 1972              	.LASF118:
 1973 04f0 433A5C55 		.ascii	"C:\\Users\\Vikram Vadhirajan\\OneDrive - LearnMSO\\"
 1973      73657273 
 1973      5C56696B 
 1973      72616D20 
 1973      56616468 
 1974 051f 5072616A 		.ascii	"Praju_Docs\\Semester_2\\EAA\\Lab\\PSOC_Creator\\Lab"
 1974      755F446F 
 1974      63735C53 
 1974      656D6573 
 1974      7465725F 
 1975 054d 5C4C6162 		.ascii	"\\Lab1\\Lab1_Assignment_GasPedal\\Lab1_GasPedal.cyd"
 1975      315C4C61 
 1975      62315F41 
 1975      73736967 
 1975      6E6D656E 
 1976 057d 736E00   		.ascii	"sn\000"
 1977              	.LASF107:
 1978 0580 45455F41 		.ascii	"EE_ApplicationMode\000"
 1978      70706C69 
 1978      63617469 
 1978      6F6E4D6F 
 1978      646500
 1979              	.LASF8:
 1980 0593 6C6F6E67 		.ascii	"long unsigned int\000"
 1980      20756E73 
 1980      69676E65 
 1980      6420696E 
 1980      7400
 1981              	.LASF88:
 1982 05a5 53435F45 		.ascii	"SC_ENGINE_driverOut_t\000"
 1982      4E47494E 
 1982      455F6472 
 1982      69766572 
 1982      4F75745F 
 1983              	.LASF73:
 1984 05bb 6F6E5570 		.ascii	"onUpdateTasks\000"
 1984      64617465 
 1984      5461736B 
 1984      7300
 1985              	.LASF37:
 1986 05c9 52435F45 		.ascii	"RC_ERROR_BUFFER_FULL\000"
 1986      52524F52 
 1986      5F425546 
 1986      4645525F 
 1986      46554C4C 
 1987              	.LASF42:
 1988 05de 52435F45 		.ascii	"RC_ERROR_CHECKSUM\000"
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 54


 1988      52524F52 
 1988      5F434845 
 1988      434B5355 
 1988      4D00
 1989              	.LASF32:
 1990 05f0 52435F45 		.ascii	"RC_ERROR_ZERO\000"
 1990      52524F52 
 1990      5F5A4552 
 1990      4F00
 1991              	.LASF35:
 1992 05fe 52435F45 		.ascii	"RC_ERROR_OVERRUN\000"
 1992      52524F52 
 1992      5F4F5645 
 1992      5252554E 
 1992      00
 1993              	.LASF112:
 1994 060f 534F5F45 		.ascii	"SO_ENGINE_signal\000"
 1994      4E47494E 
 1994      455F7369 
 1994      676E616C 
 1994      00
 1995              	.LASF5:
 1996 0620 5F5F696E 		.ascii	"__int32_t\000"
 1996      7433325F 
 1996      7400
 1997              	.LASF12:
 1998 062a 75696E74 		.ascii	"uint8_t\000"
 1998      385F7400 
 1999              	.LASF57:
 2000 0632 5254455F 		.ascii	"RTE_event\000"
 2000      6576656E 
 2000      7400
 2001              	.LASF93:
 2002 063c 5254455F 		.ascii	"RTE_SC_SPEED_getAge\000"
 2002      53435F53 
 2002      50454544 
 2002      5F676574 
 2002      41676500 
 2003              	.LASF65:
 2004 0650 53435F53 		.ascii	"SC_SPEED_driverIn_t\000"
 2004      50454544 
 2004      5F647269 
 2004      76657249 
 2004      6E5F7400 
 2005              	.LASF51:
 2006 0664 52435F45 		.ascii	"RC_ERROR_CANCELED\000"
 2006      52524F52 
 2006      5F43414E 
 2006      43454C45 
 2006      4400
 2007              	.LASF58:
 2008 0676 5265736F 		.ascii	"ResourceType\000"
 2008      75726365 
 2008      54797065 
 2008      00
 2009              	.LASF16:
 2010 0683 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 55


 2010      6C6500
 2011              	.LASF87:
 2012 068a 53435F45 		.ascii	"SC_ENGINE_driverIn_t\000"
 2012      4E47494E 
 2012      455F6472 
 2012      69766572 
 2012      496E5F74 
 2013              	.LASF61:
 2014 069f 5254455F 		.ascii	"RTE_SIGNALSTATUS_VALID\000"
 2014      5349474E 
 2014      414C5354 
 2014      41545553 
 2014      5F56414C 
 2015              	.LASF76:
 2016 06b6 7265736F 		.ascii	"resourceActive\000"
 2016      75726365 
 2016      41637469 
 2016      766500
 2017              	.LASF86:
 2018 06c5 53435F45 		.ascii	"SC_ENGINE_data_t\000"
 2018      4E47494E 
 2018      455F6461 
 2018      74615F74 
 2018      00
 2019              	.LASF68:
 2020 06d6 696E4472 		.ascii	"inDriver\000"
 2020      69766572 
 2020      00
 2021              	.LASF110:
 2022 06df 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2022      52784275 
 2022      66666572 
 2022      00
 2023              	.LASF116:
 2024 06ec 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2024      43313120 
 2024      352E342E 
 2024      31203230 
 2024      31363036 
 2025 071f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2025      20726576 
 2025      6973696F 
 2025      6E203233 
 2025      37373135 
 2026 0752 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2026      66756E63 
 2026      74696F6E 
 2026      2D736563 
 2026      74696F6E 
 2027              	.LASF33:
 2028 077a 52435F45 		.ascii	"RC_ERROR_MEMORY\000"
 2028      52524F52 
 2028      5F4D454D 
 2028      4F525900 
 2029              	.LASF105:
 2030 078a 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 2030      6F5F4952 
ARM GAS  C:\Users\VIKRAM~1\AppData\Local\Temp\ccr0uARC.s 			page 56


 2030      515F6469 
 2030      7361626C 
 2030      655F636F 
 2031              	.LASF56:
 2032 07a2 5461736B 		.ascii	"TaskTypeArray\000"
 2032      54797065 
 2032      41727261 
 2032      7900
 2033              	.LASF38:
 2034 07b0 52435F45 		.ascii	"RC_ERROR_BUFFER_EMTPY\000"
 2034      52524F52 
 2034      5F425546 
 2034      4645525F 
 2034      454D5450 
 2035              	.LASF55:
 2036 07c6 52435F74 		.ascii	"RC_t\000"
 2036      00
 2037              	.LASF40:
 2038 07cb 52435F45 		.ascii	"RC_ERROR_TIME_OUT\000"
 2038      52524F52 
 2038      5F54494D 
 2038      455F4F55 
 2038      5400
 2039              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
